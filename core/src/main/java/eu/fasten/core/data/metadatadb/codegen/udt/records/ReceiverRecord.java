/*
 * This file is generated by jOOQ.
 */
package eu.fasten.core.data.metadatadb.codegen.udt.records;


import eu.fasten.core.data.metadatadb.codegen.enums.ReceiverType;
import eu.fasten.core.data.metadatadb.codegen.udt.Receiver;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceiverRecord extends UDTRecordImpl<ReceiverRecord> implements Record3<Integer, ReceiverType, String> {

    private static final long serialVersionUID = -1071892098;

    /**
     * Setter for <code>public.receiver.line</code>.
     */
    public void setLine(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.receiver.line</code>.
     */
    public Integer getLine() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.receiver.type</code>.
     */
    public void setType(ReceiverType value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.receiver.type</code>.
     */
    public ReceiverType getType() {
        return (ReceiverType) get(1);
    }

    /**
     * Setter for <code>public.receiver.receiver_uri</code>.
     */
    public void setReceiverUri(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.receiver.receiver_uri</code>.
     */
    public String getReceiverUri() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, ReceiverType, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, ReceiverType, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Receiver.LINE;
    }

    @Override
    public Field<ReceiverType> field2() {
        return Receiver.TYPE;
    }

    @Override
    public Field<String> field3() {
        return Receiver.RECEIVER_URI;
    }

    @Override
    public Integer component1() {
        return getLine();
    }

    @Override
    public ReceiverType component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getReceiverUri();
    }

    @Override
    public Integer value1() {
        return getLine();
    }

    @Override
    public ReceiverType value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getReceiverUri();
    }

    @Override
    public ReceiverRecord value1(Integer value) {
        setLine(value);
        return this;
    }

    @Override
    public ReceiverRecord value2(ReceiverType value) {
        setType(value);
        return this;
    }

    @Override
    public ReceiverRecord value3(String value) {
        setReceiverUri(value);
        return this;
    }

    @Override
    public ReceiverRecord values(Integer value1, ReceiverType value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReceiverRecord
     */
    public ReceiverRecord() {
        super(Receiver.RECEIVER);
    }

    /**
     * Create a detached, initialised ReceiverRecord
     */
    public ReceiverRecord(Integer line, ReceiverType type, String receiverUri) {
        super(Receiver.RECEIVER);

        set(0, line);
        set(1, type);
        set(2, receiverUri);
    }
}
