/*
 * This file is generated by jOOQ.
 */
package eu.fasten.core.data.metadatadb.codegen.udt.records;


import eu.fasten.core.data.metadatadb.codegen.enums.CallType;
import eu.fasten.core.data.metadatadb.codegen.udt.CallSite;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CallSiteRecord extends UDTRecordImpl<CallSiteRecord> implements Record3<Integer, CallType, Long> {

    private static final long serialVersionUID = 1184454621;

    /**
     * Setter for <code>public.call_site.line</code>.
     */
    public void setLine(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.call_site.line</code>.
     */
    public Integer getLine() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.call_site.call_type</code>.
     */
    public void setCallType(CallType value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.call_site.call_type</code>.
     */
    public CallType getCallType() {
        return (CallType) get(1);
    }

    /**
     * Setter for <code>public.call_site.receiver_namespace_id</code>.
     */
    public void setReceiverNamespaceId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.call_site.receiver_namespace_id</code>.
     */
    public Long getReceiverNamespaceId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, CallType, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, CallType, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CallSite.LINE;
    }

    @Override
    public Field<CallType> field2() {
        return CallSite.CALL_TYPE;
    }

    @Override
    public Field<Long> field3() {
        return CallSite.RECEIVER_NAMESPACE_ID;
    }

    @Override
    public Integer component1() {
        return getLine();
    }

    @Override
    public CallType component2() {
        return getCallType();
    }

    @Override
    public Long component3() {
        return getReceiverNamespaceId();
    }

    @Override
    public Integer value1() {
        return getLine();
    }

    @Override
    public CallType value2() {
        return getCallType();
    }

    @Override
    public Long value3() {
        return getReceiverNamespaceId();
    }

    @Override
    public CallSiteRecord value1(Integer value) {
        setLine(value);
        return this;
    }

    @Override
    public CallSiteRecord value2(CallType value) {
        setCallType(value);
        return this;
    }

    @Override
    public CallSiteRecord value3(Long value) {
        setReceiverNamespaceId(value);
        return this;
    }

    @Override
    public CallSiteRecord values(Integer value1, CallType value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CallSiteRecord
     */
    public CallSiteRecord() {
        super(CallSite.CALL_SITE);
    }

    /**
     * Create a detached, initialised CallSiteRecord
     */
    public CallSiteRecord(Integer line, CallType callType, Long receiverNamespaceId) {
        super(CallSite.CALL_SITE);

        set(0, line);
        set(1, callType);
        set(2, receiverNamespaceId);
    }
}
