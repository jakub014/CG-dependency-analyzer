/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.analyzer.vulnerabilityconsumer.utils;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.*;

public class Vulnerability {

    public static class Patch {
        public String fileName;
        public String patchDate;
        public String patchUrl;
        public List<Integer> lineNumbers;

        /**
         * Empty Constructor for Serialization
         */
        public Patch() {
        }

        public String getFileName() {
            return fileName;
        }

        public String getPatchDate() {
            return patchDate;
        }

        public String getPatchUrl() { return patchUrl; }

        public List<Integer> getLineNumbers() {
            return lineNumbers;
        }

        @JsonProperty("filename")
        public void setFileName(String fileName) {
            this.fileName = fileName;
        }

        @JsonProperty("date")
        public void setPatchDate(String patchDate) {
            this.patchDate = patchDate;
        }

        @JsonProperty("patchUrl")
        public void setPatchUrl(String patchUrl) {
            this.patchUrl = patchUrl;
        }

        @JsonProperty("line_numbers")
        public void setLineNumbers(List<Integer> lineNumbers) {
            this.lineNumbers = lineNumbers;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Patch patch = (Patch) o;
            return fileName.equals(patch.fileName) &&
                    Objects.equals(patchDate, patch.patchDate) &&
                    Objects.equals(patchUrl, patch.patchUrl) &&
                    lineNumbers.equals(patch.lineNumbers);
        }

        @Override
        public int hashCode() {
            return Objects.hash(fileName, patchDate, patchUrl, lineNumbers);
        }

        @Override
        public String toString() {
            return "{" +
                    "filename='" + fileName + '\'' +
                    ", patch_date='" + patchDate + '\'' +
                    ", patchUrl='" + patchUrl + '\'' +
                    ", line_numbers=" + lineNumbers +
                    '}';
        }
    }

    private String id;
    private List<String> purls;
    private List<String> firstPatchedPurls;
    private Double scoreCVSS2;
    private Double scoreCVSS3;
    private String vectorCVSS2;
    private String vectorCVSS3;
    private List<String> cweIds;
    private Severity severity;

    private String publishedDate;
    private String lastModifiedDate;
    private String patchDate;

    private String description;
    private HashSet<String> references;
    private HashSet<String> patchLinks;
    private HashSet<String> exploits;
    private HashSet<Patch> patches;

    private HashSet<String> fastenUris;

    /**
     * Empty Constructor for Serialization
     */
    public Vulnerability() {
        this.purls = new ArrayList<>();
        this.firstPatchedPurls = new ArrayList<>();
        this.references = new HashSet<>();
        this.patchLinks = new HashSet<>();
        this.exploits = new HashSet<>();
        this.patches = new HashSet<>();
    }

    public String getId() {
        return id;
    }

    @JsonProperty("vulnerable_purls")
    public List<String> getPurls() {
        return purls;
    }

    @JsonProperty("first_patched_purls")
    public List<String> getFirstPatchedPurls() {
        return firstPatchedPurls;
    }

    public Double getScoreCVSS2() {
        return scoreCVSS2;
    }

    public Double getScoreCVSS3() {
        return scoreCVSS3;
    }

    public String getVectorCVSS2() {
        return vectorCVSS2;
    }

    public String getVectorCVSS3() {
        return vectorCVSS3;
    }

    public List<String> getCweIds() {
        return cweIds;
    }

    public Severity getSeverity() {
        return severity;
    }

    public String getPublishedDate() {
        return publishedDate;
    }

    public String getLastModifiedDate() {
        return lastModifiedDate;
    }

    public String getDescription() {
        return description;
    }

    public HashSet<String> getReferences() {
        return references;
    }

    public HashSet<String> getPatchLinks() {
        return patchLinks;
    }

    public HashSet<String> getExploits() {
        return exploits;
    }

    @JsonIgnore
    public HashSet<Patch> getPatches() {
        return patches;
    }

    @JsonProperty("vulnerable_fasten_uris")
    public HashSet<String> getFastenUris() {
        return fastenUris;
    }

    @JsonProperty("patch_date")
    public String getPatchDate() {
        return patchDate;
    }

    public void setId(String id) {
        this.id = id;
    }

    @JsonProperty("purls")
    public void setPurls(List<String> purls) {
        this.purls = purls;
    }

    @JsonProperty("first_patched_purls")
    public void setFirstPatchedPurls(List<String> firstPatchedPurls) {
        this.firstPatchedPurls = firstPatchedPurls;
    }

    public void setScoreCVSS2(Double scoreCVSS2) {
        this.scoreCVSS2 = scoreCVSS2;
    }

    public void setScoreCVSS3(Double scoreCVSS3) {
        this.scoreCVSS3 = scoreCVSS3;
    }

    public void setVectorCVSS2(String vectorCVSS2) {
        this.vectorCVSS2 = vectorCVSS2;
    }

    public void setVectorCVSS3(String vectorCVSS3) {
        this.vectorCVSS3 = vectorCVSS3;
    }

    public void setCweIds(List<String> cweIds) {
        this.cweIds = cweIds;
    }

    public void setSeverity(Severity severity) {
        this.severity = severity;
    }

    @JsonProperty("published_date")
    public void setPublishedDate(String publishedDate) {
        this.publishedDate = publishedDate;
    }

    @JsonProperty("last_modified_date")
    public void setLastModifiedDate(String lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setReferences(HashSet<String> references) {
        this.references = references;
    }

    @JsonProperty("patch_links")
    public void setPatchLinks(HashSet<String> patchLinks) {
        this.patchLinks = patchLinks;
    }

    public void setExploits(HashSet<String> exploits) {
        this.exploits = exploits;
    }

    @JsonProperty
    public void setPatches(HashSet<Patch> patches) {
        this.patches = patches;
    }

    @JsonIgnore
    public void setFastenUris(HashSet<String> fastenUris) {
        this.fastenUris = fastenUris;
    }

    @JsonIgnore
    public void setPatchDate(String patchDate) {
        this.patchDate = patchDate;
    }

    @Override
    public String toString() {
        return "Vulnerability {" +
                "id='" + id + '\'' +
                ", purls=" + purls +
                ", firstPatchedPurls=" + firstPatchedPurls +
                ", scoreCVSS2=" + scoreCVSS2 +
                ", scoreCVSS3=" + scoreCVSS3 +
                ", severity=" + severity +
                ", published_date='" + publishedDate + '\'' +
                ", last_modified_date='" + lastModifiedDate + '\'' +
                ", description='" + description + '\'' +
                ", references=" + references +
                ", patch_links=" + patchLinks +
                ", exploits=" + exploits +
                ", patches=" + patches.toString() +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Vulnerability that = (Vulnerability) o;
        return id.equals(that.id) &&
                Objects.equals(purls, that.purls) &&
                Objects.equals(scoreCVSS2, that.scoreCVSS2) &&
                Objects.equals(scoreCVSS3, that.scoreCVSS3) &&
                severity == that.severity &&
                Objects.equals(publishedDate, that.publishedDate) &&
                Objects.equals(lastModifiedDate, that.lastModifiedDate) &&
                Objects.equals(description, that.description) &&
                Objects.equals(references, that.references) &&
                Objects.equals(patchLinks, that.patchLinks) &&
                Objects.equals(exploits, that.exploits) &&
                Objects.equals(patches, that.patches);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}


