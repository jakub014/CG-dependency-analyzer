/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package eu.fasten.vulnerabilityconsumer;

import eu.fasten.analyzer.vulnerabilityconsumer.utils.PURLPackage;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.HashMap;

public class PurlToObjectTest {

    String purlDebian = "pkg:deb/debian/curl@7.50.3-1?arch=i386&distro=jessie";
    String purlPython = "pkg:pypi/django@1.11.1";
    String purlMaven = "pkg:maven/org.apache.xmlgraphics/batik-anim@1.9.1";

    @Test
    public void testPurlDebian() {
        // Expected
        PURLPackage ppE = new PURLPackage();
        ppE.setType("debian");
        ppE.setNamespace("debian");
        ppE.setName("curl");
        ppE.setVersion("7.50.3-1");
        HashMap<String, String> qE = new HashMap<>();
        qE.put("arch", "i386");
        qE.put("distro", "jessie");
        ppE.setQualifiers(qE);

        // Actual
        PURLPackage pp = new PURLPackage();
        pp = pp.getObjectFromPurl(purlDebian);

        assertTrue(ppE.equals(pp));
    }

    @Test
    public void testPurlPython() {
        // Expected
        PURLPackage ppE = new PURLPackage();
        ppE.setType("PyPI");
        ppE.setNamespace(null);
        ppE.setName("django");
        ppE.setVersion("1.11.1");

        // Actual
        PURLPackage pp = new PURLPackage();
        pp = pp.getObjectFromPurl(purlPython);

        assertTrue(ppE.equals(pp));
    }

    @Test
    public void testPurlMaven() {
        // Expected
        PURLPackage ppE = new PURLPackage();
        ppE.setType("mvn");
        ppE.setNamespace("org.apache.xmlgraphics");
        ppE.setName("batik-anim");
        ppE.setVersion("1.9.1");

        // Actual
        PURLPackage pp = new PURLPackage();
        pp = PURLPackage.getObjectFromPurl(purlMaven);

        assertTrue(ppE.equals(pp));
    }

}
