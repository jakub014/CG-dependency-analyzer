<!--
  #%L
  %%
  Copyright (C) 2011 - 2017 BMW Car IT GmbH
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>${project.groupId}:${project.artifactId}</name>
	<groupId>io.joynr.java.core</groupId>
	<artifactId>libjoynr</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>io.joynr.java</groupId>
		<artifactId>core</artifactId>
		<version>1.16.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<dependencies>
		<dependency>
			<groupId>io.joynr.java</groupId>
			<artifactId>javaapi</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.joynr.java</groupId>
			<artifactId>javaapi</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.common</groupId>
			<artifactId>guice-integration</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.messaging</groupId>
			<artifactId>messaging-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.common</groupId>
			<artifactId>discovery-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.java.common</groupId>
			<artifactId>status-metrics</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.joynr.smrf.java</groupId>
			<artifactId>smrf</artifactId>
		</dependency>
		<dependency>
			<groupId>io.joynr.smrf.java</groupId>
			<artifactId>smrf-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-multibindings</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-assistedinject</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
			<exclusions>
				<!--
				Exclude the transitive dependency to hamcrest-core in order to avoid
				conflicts with the requested hamcrest-core version below.
				-->
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>io.joynr.tools.generator</groupId>
				<artifactId>joynr-generator-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>testSources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<model>Navigation.fidl</model>
							<generationLanguage>java</generationLanguage>
							<outputPath>${basedir}/src/test/generated</outputPath>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.joynr.tools.generator</groupId>
						<artifactId>java-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr</groupId>
						<artifactId>basemodel</artifactId>
						<version>${project.version}</version>
					</dependency>
					<dependency>
						<groupId>io.joynr</groupId>
						<artifactId>basemodel</artifactId>
						<classifier>tests</classifier>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/test/generated</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<!-- specify plugin versions and configuration here to apply to all submodules
			that use the specified plugin -->
		<pluginManagement>
			<plugins>
				<!-- Make the libjoynr unittests available to other platforms -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>appassembler-maven-plugin</artifactId>
					<configuration>
						<repositoryLayout>flat</repositoryLayout>
						<repositoryName>lib</repositoryName>
						<programs>
							<program>
								<mainClass>io.joynr.dispatcher.Test</mainClass>
								<name>Test</name>
							</program>
						</programs>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
