/*
 * TOZNY NON-COMMERCIAL LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, the contents of this file are
 * subject to the TOZNY NON-COMMERCIAL LICENSE (the "License") which
 * permits use of the software only by government agencies, schools,
 * universities, non-profit organizations or individuals on projects that
 * do not receive external funding other than government research grants
 * and contracts.  Any other use requires a commercial license. You may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at https://tozny.com/legal/non-commercial-license.
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations under
 * the License. Portions of the software are Copyright (c) TOZNY LLC, 2018.
 * All rights reserved.
 *
 */

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'maven'
apply plugin: 'signing'

sourceSets {
  main {
    java {
      srcDirs "${project(":e3db").projectDir}/src/main/java",
              "${project(":e3db-crypto-interface").projectDir}/src/main/java",
              "${project(":e3db-crypto-plain").projectDir}/src/main/java",
              "${project(":e3db-crypto-stub-android").projectDir}/src/main/java"
    }
  }
}

evaluationDependsOn(':publish')

task sourceJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allJava
}


task javadocJar(type: Jar) {
  classifier = 'javadoc'

  from javadoc

}

signing {
  sign configurations.archives
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java

      groupId project(":publish").ext.groupId
      artifactId 'e3db-client-plain'
      version project(":publish").ext.version
    }
  }
}
  
dependencies {
  implementation project(":e3db-crypto-plain").configurations.compile.dependencies.matching { dep ->
    // exclude project dependencies - only include external, maven dependencies
    ExternalModuleDependency.class.isAssignableFrom(dep.class)
  }
  implementation project(":e3db").configurations.compile.dependencies.matching { dep ->
    // exclude project dependencies - only include external, maven dependencies
    ExternalModuleDependency.class.isAssignableFrom(dep.class)
  }
  compileOnly project(":e3db").configurations.compileOnly.dependencies
}


artifacts {
  archives javadocJar, sourceJar
}

uploadArchives {
  group = "com.tozny.e3db"
  archivesBaseName = "e3db-client-plain"
  version = project(":publish").ext.version
  println()
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      pom.project {
        artifactId = 'e3db-client-plain'
        groupId = 'com.tozny.e3db'
        name 'E3DB Java SDK'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'An SDK to interact with TozStore Encrypted Storage'
        url 'https://github.com/tozny/e3db-java'

        scm {
          connection 'scm:git:git://github.com/tozny/e3db-java.git'
          developerConnection 'scm:git:ssh://github.com/tozny/e3db-java.git'
          url 'https://github.com/tozny/e3db-java/tree/master'
        }

        licenses {
          license {
            name 'TOZNY NON-COMMERCIAL LICENSE'
            url 'https://tozny.com/legal/non-commercial-license'
          }
        }

        developers {
          developer {
            id developerId
            name developerName
            email developerEmail
          }
        }
      }
    }
  }
}
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
  }
}
repositories {
  mavenCentral()
}
compileKotlin {
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}