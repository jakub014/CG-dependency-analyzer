group = rootProject.group
version = rootProject.version

apply plugin: 'scala'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

ext {
    artefact = 'test-util-kafka_' + project(':kafka').baseKafkaVersion + '-scala_' + rootProject.baseScalaVersion
}
if (rootProject.hasProperty('maven-central')) {
    uploadArchives.repositories.mavenDeployer.pom.artifactId = artefact
}
publishing {
    publications {
        maven(MavenPublication) {
            artifactId artefact
            from components.java
        }
    }
}
install.repositories.mavenInstaller.pom.artifactId = artefact
def installer = install.repositories.mavenInstaller
[installer]*.pom*.whenConfigured { pom ->
}

dependencies {
    compile group: 'org.scalatest', name: 'scalatest_' + rootProject.baseScalaVersion, version: rootProject.scalaTestVersion
    compile group: 'org.scalacheck', name: 'scalacheck_' + rootProject.baseScalaVersion, version: rootProject.scalaCheckVersion
    compile group: 'com.101tec', name: 'zkclient', version: rootProject.zkClientVersion
    compile (group: 'org.apache.kafka', name: 'kafka_'+ rootProject.baseScalaVersion, version: project(':kafka').kafkaVersion) {
        exclude group: 'com.fasterxml.jackson.core'
    }
    compile (group: 'io.confluent', name: 'kafka-schema-registry', version: project(':kafka').confluentVersion) {
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'org.apache.kafka'
    }
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: rootProject.jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: rootProject.jacksonVersion

}



