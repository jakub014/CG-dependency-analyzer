// Plugins
plugins {
	id 'io.freefair.lombok' version '5.3.3.3' apply false
	id 'com.jfrog.bintray' version '1.8.5' apply false
	id 'com.jfrog.artifactory' version '4.13.0' apply false
	id 'com.github.johnrengelman.shadow' version '6.1.0' apply false
}

// Artifact Info
project.ext {
	groupId = 'com.github.twitch4j'
	artifactNamespace = 'twitch4j'
	artifactName = 'Twitch4J'
	artifactVersion = String.valueOf(System.getenv("CI_COMMIT_REF_NAME")).replace("v", "")
	artifactDescription = 'Twitch4J'
	websiteUrl = 'https://github.com/twitch4j/twitch4j'
	issueTrackerUrl = 'https://github.com/twitch4j/twitch4j/issues'
	vcsUrl = 'https://github.com/twitch4j/twitch4j.git'
}

// All-Projects
allprojects {
	// Repositories
	repositories {
		jcenter()
		maven { url "https://maven.google.com" }
		mavenLocal()
	}
}

// Subprojects
subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'
	apply plugin: 'com.jfrog.artifactory'
	apply plugin: 'io.freefair.lombok'
	apply plugin: 'com.github.johnrengelman.shadow'

	lombok {
		version = "1.18.16"
	}
	// prevent to generate 'lombok.config' - more about: https://projectlombok.org/features/configuration
	generateLombokConfig.enabled = false

	// Source Compatibility
	sourceCompatibility = 1.8

	// Dependency Management for Subprojects
	dependencies {
		constraints {
			// Logging
			api group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
			api group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

			// Apache Commons
			api group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
			api group: 'commons-io', name: 'commons-io', version: '2.8.0'
			api group: 'commons-configuration', name: 'commons-configuration', version: '1.10'

			// Event Dispatcher
			api group: 'com.github.philippheuer.events4j', name: 'events4j-core', version: '0.9.5'
			api group: 'com.github.philippheuer.events4j', name: 'events4j-handler-simple', version: '0.9.5'
			api group: 'com.github.philippheuer.events4j', name: 'events4j-handler-reactor', version: '0.9.5'
			api group: 'com.github.philippheuer.events4j', name: 'events4j-handler-spring', version: '0.9.5'

			// Credential Manager
			api group: 'com.github.philippheuer.credentialmanager', name: 'credentialmanager', version: '0.1.2'

			// HTTP Client
			api group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.1'

			// Rate Limiting
			api group: 'com.github.vladimir-bukhtoyarov', name: 'bucket4j-core', version: '4.7.0'

			// Caching
			api group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.9.0'

			// Http Client
			api group: 'io.github.openfeign', name: 'feign-okhttp', version: '11.1'
			api group: 'io.github.openfeign', name: 'feign-jackson', version: '11.1'
			api group: 'io.github.openfeign', name: 'feign-slf4j', version: '11.1'
			api group: 'io.github.openfeign', name: 'feign-hystrix', version: '11.1'

			// Hystrix
			api group: 'com.netflix.hystrix', name: 'hystrix-core', version: '1.5.18'

			// Jackson (JSON)
			api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.3'
			api group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.3'

			// WebSocket
			api group: 'com.neovisionaries', name: 'nv-websocket-client', version: '2.14'

			// Annotations
			api group: 'org.jetbrains', name: 'annotations', version: '20.1.0'
		}
	}

	// Source encoding
	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	// Common Dependencies
	plugins.withType(JavaPlugin) {
		dependencies {
			// Apache Commons
			api group: 'org.apache.commons', name: 'commons-lang3'
			api group: 'commons-io', name: 'commons-io'

			// Logging
			api group: 'org.slf4j', name: 'slf4j-api'
			testImplementation group: 'ch.qos.logback', name: 'logback-classic'

			// Test
			testImplementation platform(group: 'org.junit', name: 'junit-bom', version: '5.7.1')
			testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'
		}
	}
}

tasks.register("aggregateJavadoc", Javadoc) {
	it.group = JavaBasePlugin.DOCUMENTATION_GROUP
	it.options {
		title = "${project.artifactName} (v${project.version})"
		windowTitle = "${project.artifactName} (v${project.version})"
		encoding = "UTF-8"
	}

	it.source(subprojects.collect { it.delombok })
	it.classpath = files(subprojects.collect { it.sourceSets.main.compileClasspath })

	destinationDir = file("${rootDir}/docs/static/javadoc")

	if (JavaVersion.current() != JavaVersion.VERSION_1_8){
		it.options.addBooleanOption('html5', true)
	}
}
