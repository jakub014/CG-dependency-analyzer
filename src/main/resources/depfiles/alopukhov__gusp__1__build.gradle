plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

configurations {
    guava
    spring
    api {
        extendsFrom guava, spring
    }
}

dependencies {
    guava 'com.google.guava:guava:15.0'
    spring 'org.springframework:spring-context:4.1.1.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2',
            'org.junit.jupiter:junit-jupiter-params:5.6.2',
            'org.assertj:assertj-core:3.16.1',
            'org.mockito:mockito-core:3.4.6'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

publishing {
    publications {
        gusp(MavenPublication) {
            from components.java
            pom {
                name = 'GUSP'
                description = "Glue between GUava and SPring"
            }
        }
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

final testGuavaVersions = [
        "guava_21_0" : "com.google.guava:guava:21.0",
        "guava_29_0_jre" : "com.google.guava:guava:29.0-jre" ]

final testSpringVersions = [
        "spring_4_2_8" : "org.springframework:spring-context:4.2.8.RELEASE",
        "spring_4_3_28" : "org.springframework:spring-context:4.3.28.RELEASE",
        "spring_5_0_0" : "org.springframework:spring-context:5.0.0.RELEASE",
        "spring_5_1_0" : "org.springframework:spring-context:5.1.0.RELEASE",
        "spring_5_2_8" : "org.springframework:spring-context:5.2.8.RELEASE" ]

final createConfiguration = { String confName, String dependency ->
    configurations.register(confName)
    dependencies.add(confName, dependency)
}
testGuavaVersions.forEach(createConfiguration)
testSpringVersions.forEach(createConfiguration)

testGuavaVersions.forEach({confName, dependency ->
    final taskRef = tasks.register("test_with_$confName", Test, {
        description "Run tests with guava ${dependency}"
        group "verification"
        classpath = classpath - configurations.guava + configurations.getByName(confName)
    })
    check.dependsOn taskRef
})

testSpringVersions.forEach({confName, dependency ->
    final taskRef = tasks.register("test_with_$confName", Test, {
        description "Run tests with spring ${dependency}"
        group "verification"
        classpath = classpath - configurations.spring + configurations.getByName(confName)
    })
    check.dependsOn taskRef
})