/*
 * TOZNY NON-COMMERCIAL LICENSE
 *
 * Tozny dual licenses this product. For commercial use, please contact
 * info@tozny.com. For non-commercial use, the contents of this file are
 * subject to the TOZNY NON-COMMERCIAL LICENSE (the "License") which
 * permits use of the software only by government agencies, schools,
 * universities, non-profit organizations or individuals on projects that
 * do not receive external funding other than government research grants
 * and contracts.  Any other use requires a commercial license. You may
 * not use this file except in compliance with the License. You may obtain
 * a copy of the License at https://tozny.com/legal/non-commercial-license.
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations under
 * the License. Portions of the software are Copyright (c) TOZNY LLC, 2018.
 * All rights reserved.
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply plugin: 'kotlin'
apply plugin: 'java'


buildscript {
   ext.kotlin_plugin_version = '1.4.30'
   ext.kotlin_jdk8_version = '1.4.30'
    repositories {
        jcenter()
        google()
        mavenCentral()
//        mavenLocal()
        maven { url "https://maven.tozny.com/repo" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.2'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.0.0"
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:2.0.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_plugin_version"
        classpath "commons-io:commons-io:2.8.0"
        classpath "org.assertj:assertj-core:3.19.0"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
        mavenLocal()
        maven { url 'https://jitpack.io' }
    }
}

ext {
    jacksonVersion = "2.12.1"
    retrofitVersion = "2.9.0"
}


def regToken() {
    if(project.properties["REGISTRATION_TOKEN"] != null)
        project.properties["REGISTRATION_TOKEN"]
    else if (System.getenv("REGISTRATION_TOKEN") != null)
        System.getenv("REGISTRATION_TOKEN")
    else {
        Properties props = new Properties()
        props.load(project.rootProject.file('local.properties').newDataInputStream())
        props.getProperty("REGISTRATION_TOKEN")
    }
}

def apiUrl() {
    if(project.properties["DEFAULT_API_URL"] != null)
        project.properties["DEFAULT_API_URL"]
    else if(System.getenv("DEFAULT_API_URL") != null)
        System.getenv("DEFAULT_API_URL")
    else {
        Properties props = new Properties()
        props.load(project.rootProject.file('local.properties').newDataInputStream())
        if(props.getProperty("DEFAULT_API_URL") != null)
            props.getProperty("DEFAULT_API_URL")
        else
            "https://api.e3db.com"
    }
}
