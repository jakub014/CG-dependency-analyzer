<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.optum.sourcehawk</groupId>
        <artifactId>sourcehawk-dist</artifactId>
        <version>0.6.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>sourcehawk-dist-debian</artifactId>
    <name>Sourcehawk Distributions Debian</name>
    <description>Sourcehawk Debian Packages</description>
    <packaging>pom</packaging>

    <properties>
        <debian.build.directory>${project.build.directory}/debian</debian.build.directory>
        <debian.package>${bintray.package}</debian.package>
        <debian.package.version>${project.version}</debian.package.version>
        <debian.package.version.suffix>~${git.commit.time}+${git.commit.id.abbrev}</debian.package.version.suffix>
        <debian.architecture>amd64</debian.architecture>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.optum.sourcehawk</groupId>
            <artifactId>sourcehawk-dist-linux</artifactId>
            <version>${project.version}</version>
            <classifier>x86_64</classifier>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.optum.sourcehawk</groupId>
            <artifactId>sourcehawk-cli</artifactId>
            <version>${project.version}</version>
            <classifier>bash-completion</classifier>
            <type>sh</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- RESOLVE GIT COMMIT INFORMATION -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <dateFormat>${maven.build.timestamp.format}</dateFormat>
                    <dotGitDirectory>${maven.multiModuleProjectDirectory}/.git</dotGitDirectory>
                    <skipPoms>false</skipPoms>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.directory}/git.properties</generateGitPropertiesFilename>
                </configuration>
            </plugin>

            <!-- FILTER RESOURCES TO INJECT MAVEN PROPERTIES INTO PLACEHOLDERS -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-manpages</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.parent.parent.basedir}/gh-pages/manpages</directory>
                                    <includes>
                                        <include>${debian.package}*</include>
                                    </includes>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/debian/usr/share/man/man1</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${debian.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- COPY NATIVE IMAGE DEPENDENCIES -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-native-image-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.optum.sourcehawk</groupId>
                                    <artifactId>sourcehawk-dist-linux</artifactId>
                                    <classifier>x86_64</classifier>
                                    <type>zip</type>
                                    <outputDirectory>${debian.build.directory}/usr/bin</outputDirectory>
                                    <destFileName>${debian.package}</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.optum.sourcehawk</groupId>
                                    <artifactId>sourcehawk-cli</artifactId>
                                    <classifier>bash-completion</classifier>
                                    <type>sh</type>
                                    <outputDirectory>${debian.build.directory}/usr/share/bash-completion/completions</outputDirectory>
                                    <destFileName>${debian.package}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- BUILD DOCKER IMAGE -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <DEBIAN_DIRECTORY>target/debian</DEBIAN_DIRECTORY>
                    </buildArgs>
                    <skipDockerInfo>true</skipDockerInfo>
                </configuration>
                <executions>
                    <execution>
                        <id>build-and-tag-debian-buster</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <repository>${project.artifactId}-builder-debian-buster</repository>
                            <buildArgs>
                                <FROM>bitnami/minideb:buster</FROM>
                                <DEB_FILE>/tmp/${debian.package}-debian-buster.deb</DEB_FILE>
                            </buildArgs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-and-tag-ubuntu-focal</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <repository>${project.artifactId}-builder-ubuntu-focal</repository>
                            <tag>${project.version}</tag>
                            <buildArgs>
                                <FROM>ubuntu:focal</FROM>
                                <DEB_FILE>/tmp/${debian.package}-ubuntu-focal.deb</DEB_FILE>
                            </buildArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- EXEC PROCESSORS AND SCRIPTS -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>

                    <!-- GZIP THE MANPAGES-->
                    <execution>
                        <id>gzip-manpages</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.parent.basedir}/scripts/gzip-manpages.sh</executable>
                            <workingDirectory>${project.build.directory}/debian/usr/share/man/man1</workingDirectory>
                        </configuration>
                    </execution>

                    <!-- EXTRACT DEB PACKAGE FROM DOCKER CONTAINER TO TARGET DIRECTORY -->
                    <execution>
                        <id>extract-debian-buster-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.parent.basedir}/scripts/extract-file-from-docker-container.sh</executable>
                            <arguments>
                                <argument>${project.artifactId}-builder-debian-buster:${project.version}</argument>
                                <argument>/tmp/${debian.package}-debian-buster.deb</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>extract-ubuntu-focal-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${project.parent.basedir}/scripts/extract-file-from-docker-container.sh</executable>
                            <arguments>
                                <argument>${project.artifactId}-builder-ubuntu-focal:${project.version}</argument>
                                <argument>/tmp/${debian.package}-ubuntu-focal.deb</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <!-- CALCULATE DEBIAN PACKAGE VERSION AND ATTACH DEBIAN ARTIFACT-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>calculate-debian-package-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <value>${debian.package.version}</value>
                            <name>debian.package.version</name>
                            <regex>-SNAPSHOT</regex>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach-debian-artifact</id>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/${debian.package}-debian-buster.deb</file>
                                    <classifier>buster_amd64</classifier>
                                    <type>deb</type>
                                </artifact>
                                <artifact>
                                    <file>${project.build.directory}/${debian.package}-ubuntu-focal.deb</file>
                                    <classifier>ubuntu-focal_amd64</classifier>
                                    <type>deb</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>debian-package-release</id>
            <activation>
                <property>
                    <name>ci.release</name>
                </property>
            </activation>
            <properties>
                <debian.package.version.suffix/> <!-- No suffix required on releases -->
            </properties>
        </profile>
        <profile>
            <id>debian-package-snapshot</id>
            <activation>
                <property>
                    <name>ci.snapshot</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <environmentVariables combine.children="append">
                                <BINTRAY_REPOSITORY_OVERRIDE>dev-snapshots</BINTRAY_REPOSITORY_OVERRIDE>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debian-package-publish</id>
            <activation>
                <property>
                    <name>ci.deploy</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <BINTRAY_ORGANIZATION>${bintray.organization}</BINTRAY_ORGANIZATION>
                                <BINTRAY_PACKAGE>${debian.package}</BINTRAY_PACKAGE>
                                <PACKAGE_VERSION>${debian.package.version}${debian.package.version.suffix}</PACKAGE_VERSION>
                                <BINTRAY_ARCHITECTURES>${debian.architecture},i386,x86_64</BINTRAY_ARCHITECTURES>
                            </environmentVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>publish-debian-buster-package</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <executable>${project.basedir}/scripts/publish-package-version-to-bintray.sh</executable>
                                    <environmentVariables>
                                        <PACKAGE_FILE_PATH>${project.build.directory}/${debian.package}-debian-buster.deb</PACKAGE_FILE_PATH>
                                        <BINTRAY_REPOSITORY>deb</BINTRAY_REPOSITORY>
                                        <BINTRAY_DISTRIBUTIONS>buster,jessie,stretch</BINTRAY_DISTRIBUTIONS>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>publish-ubuntu-focal-package</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <executable>${project.basedir}/scripts/publish-package-version-to-bintray.sh</executable>
                                    <environmentVariables>
                                        <PACKAGE_FILE_PATH>${project.build.directory}/${debian.package}-ubuntu-focal.deb</PACKAGE_FILE_PATH>
                                        <BINTRAY_REPOSITORY>ubuntu</BINTRAY_REPOSITORY>
                                        <BINTRAY_DISTRIBUTIONS>focal</BINTRAY_DISTRIBUTIONS>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
