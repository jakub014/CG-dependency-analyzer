plugins {
  id "com.google.protobuf" version "0.8.8"
}

version = '0.1.0'

jar {
    enabled = true
    baseName = 'prutobuf'
    manifest {
        attributes 'Implementation-Title': 'iHaru Framework ProtoBuf Adapter', 'Implementation-Version': version
    }
}

dependencies {
    compileOnly project(":Base-Interface")
    compileOnly project(":SpringBoot")
    
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.7.1'
    compile group: 'com.googlecode.protobuf-java-format', name: 'protobuf-java-format', version: '1.4'
    
    testCompile project(":Base-Interface")
}

// pre-compiled protoc
protobuf {
	// Configure the protoc executable
	protoc {
            // Download from repositories
            artifact = 'com.google.protobuf:protoc:3.7.1'
	}
        // generated java files dir
        generatedFilesBaseDir = "$projectDir/generated-sources"
        generateProtoTasks {
            // all() returns the collection of all protoc tasks
            all().each { task ->
                // Here you can configure the task
            }
            // In addition to all(), you may get the task collection by various
            // criteria:
            // (Java only) returns tasks for a sourceSet
            ofSourceSet('main')
        } 
}
sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'            
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

clean {
    delete protobuf.generatedFilesBaseDir
}