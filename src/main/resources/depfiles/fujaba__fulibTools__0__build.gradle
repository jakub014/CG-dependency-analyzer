plugins {
   id 'java-library'
   id 'maven-publish'
   // https://plugins.gradle.org/plugin/com.palantir.revapi
   id 'com.palantir.revapi' version '1.4.4'
   // https://plugins.gradle.org/plugin/org.fulib.fulibGradle
   id 'org.fulib.fulibGradle' version '0.5.0'
   // https://plugins.gradle.org/plugin/com.bmuschko.nexus
   id 'com.bmuschko.nexus' version '2.3.1'
   // https://plugins.gradle.org/plugin/io.codearte.nexus-staging
   id 'io.codearte.nexus-staging' version '0.22.0'
}

group = 'org.fulib'
version = 'git describe --tags'.execute().text[1..-2] // strip v and \n
description = '''fulibTools is a library for testing that complements the fulib (https://github.com/fujaba/fulib) code generator.
It provides features like class and object diagrams as well as a mechanism for automatically updating code snippets in documentation.'''

modifyPom {
   project {
      name = project.name
      description = project.description
      url = 'https://github.com/fujaba/fulibTools'
      inceptionYear = '2018'

      scm {
         url = 'https://github.com/fujaba/fulibTools'
      }

      licenses {
         license {
            name = 'MIT License'
            url = 'http://www.opensource.org/licenses/mit-license.php'
         }
      }

      developers {
         developer {
            id = 'zuendorf'
            name = 'Albert Zuendorf'
         }
         developer {
            id = 'digitalhoax'
            name = 'Tobias George'
         }
         developer {
            id = 'eicke123'
            name = 'Christoph Eickhoff'
         }
         developer {
            id = 'Clashsoft'
            name = 'Adrian Kunz'
         }
      }
   }
}

sourceCompatibility = 1.8

// --------------- Dependencies ---------------

repositories {
   mavenLocal()
   mavenCentral()
   jcenter()
}

dependencies {
   // https://mvnrepository.com/artifact/org.fulib/fulibScenarios
   fulibScenarios group: 'org.fulib', name: 'fulibScenarios', version: '1.6.2'

   // https://mvnrepository.com/artifact/org.fulib/fulib
   def fulib = [ group: 'org.fulib', name: 'fulib', version: '1.5.1' ]

   fulibScenarios fulib

   api fulib

   // https://mvnrepository.com/artifact/org.apache.commons/commons-text
   implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'

   // https://mvnrepository.com/artifact/org.antlr/ST4
   implementation group: 'org.antlr', name: 'ST4', version: '4.3.1'

   // https://mvnrepository.com/artifact/guru.nidi/graphviz-java
   implementation group: 'guru.nidi', name: 'graphviz-java-all-j2v8', version: '0.18.0'

   // https://mvnrepository.com/artifact/org.junit/junit
   testImplementation group: 'junit', name: 'junit', version: '4.13'

   // https://mvnrepository.com/artifact/commons-io/commons-io
   testImplementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
}

// --------------- Misc. Settings ---------------

// make the studyRight classModel.yaml available as a resource
sourceSets.test.resources.srcDir 'src/test/java'

javadoc {
   failOnError = false
}

revapi {
   oldVersion = '1.4.0'
}

test {
   testLogging.showStandardStreams = true

   workingDir = temporaryDir
   outputs.dir workingDir

   doFirst {
      workingDir.mkdirs()
   }
}
