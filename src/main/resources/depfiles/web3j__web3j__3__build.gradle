description 'web3j project code generators'

dependencies {
    compile project(':core'),
            "com.squareup:kotlinpoet:$kotlinPoetVersion",
            "com.squareup:javapoet:$javaPoetVersion",
            "info.picocli:picocli:$picocliVersion"
    testCompile project(':core').sourceSets.test.output,
            "ch.qos.logback:logback-core:$logbackVersion",
            "ch.qos.logback:logback-classic:$logbackVersion"
    implementation("org.junit.platform:junit-platform-launcher:$junitPlatformLauncherVersion")
    implementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    implementation("org.junit.vintage:junit-vintage-engine:$junitVersion")
}

file("src/test/resources/solidity").listFiles().each { File file ->
    def contractFile = file.listFiles().find({
        it.getName().endsWith(".sol")
    })
    if (contractFile != null) {
        def contractName = contractFile.name.substring(0, contractFile.name.length() - 4)
        def generateTask = tasks.register("generate${contractName}Wrapper", JavaExec) {
            classpath = sourceSets.test.runtimeClasspath
            main = 'org.web3j.codegen.SolidityFunctionWrapperGenerator'
            args = [
                'generate',
                '--abiFile',
                "${contractFile.parent}/build/${contractName}.abi",
                '--binFile',
                "${contractFile.parent}/build/${contractName}.bin",
                '--outputDir',
                'build/resources/test/java',
                '--package',
                'org.web3j.test.contract'
            ]
        }
        test.dependsOn generateTask
    }
}
