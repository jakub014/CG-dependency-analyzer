//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'
plugins {
    id "groovy"
    id "com.gradle.plugin-publish" version "0.11.0"
    id "java-gradle-plugin"
}

group 'com.klinec'
version '1.8.0'

apply plugin: 'maven'
apply plugin: 'signing'

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://javacard.pro/maven"
    }
    maven {
        url "https://deadcode.me/mvn"
    }
    //mavenLocal()
}

dependencies {
    api gradleApi()
    implementation localGroovy()
    implementation 'com.github.martinpaljak:ant-javacard:20.03.25'
    implementation 'com.github.martinpaljak:gppro:20.08.12'
    implementation 'com.github.martinpaljak:gptool:20.08.12'
    implementation 'com.github.martinpaljak:globalplatformpro:20.08.12'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
}

def siteUrl = 'https://github.com/ph4r05/javacard-gradle-plugin'
def gitUrl = 'https://github.com/ph4r05/javacard-gradle-plugin.git'

signing {
    required {
        gradle.taskGraph.hasTask("uploadArchives")
    }
    sign configurations.archives
}

// When uploading setup your ~/.gradle/gradle.properties
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.findProperty('ossrhUsername'), password: project.findProperty('ossrhPassword'))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.findProperty('ossrhUsername'), password: project.findProperty('ossrhPassword'))
            }

            pom.project {
                name 'gradle-javacard'
                packaging 'jar'

                description 'Gradle JavaCard plugin'
                url 'https://github.com/ph4r05/javacard-gradle-plugin'

                scm {
                    connection 'scm:git:git://github.com/ph4r05/javacard-gradle-plugin'
                    developerConnection 'scm:git:git@github.com:ph4r05/javacard-gradle-plugin.git'
                    url 'https://github.com/ph4r05/javacard-gradle-plugin'
                }

                licenses {
                    license {
                        name 'MIT'
                        url 'https://raw.githubusercontent.com/ph4r05/javacard-gradle-plugin/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'ph4r05'
                        name 'Dusan Klinec'
                        email 'dusan.klinec@gmail.com'
                    }
                    developer {
                        id 'bertrandmartel'
                        name 'Bertrand Martel'
                        email 'bmartel.fr@gmail.com'
                    }
                }
            }
        }
    }
}


sourceSets {
    main {
        java {
            srcDirs = [
//                    'src/main/java/ant-javacard/src/main/java',
//                    'src/main/java/global-platform-pro/src/main/java',
//                    'src/main/java/apdu4j/src',
//                    'src/main/java/jnasmartcardio/src/main/java'
            ]
            exclude '**/testapplets/**'
        }
    }
}

Object.metaClass.notIn = { Object collection ->
    !(delegate in collection)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives groovydocJar
}

gradlePlugin {
    plugins {
        javacard {
            id = 'com.klinec.gradle.javacard'
            implementationClass = 'com.klinec.gradle.javacard.JavaCardPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/ph4r05/javacard-gradle-plugin'
    vcsUrl = 'https://github.com/ph4r05/javacard-gradle-plugin'
    description = 'Gradle JavaCard plugin'
    tags = ['javacard']

    plugins {
        javacard {
            displayName = 'Gradle JavaCard plugin'
        }
    }
}

task generateJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    destinationDir = file("./doc/")
}

tasks.jar {
    manifest {
        attributes('Automatic-Module-Name': 'com.klinec.gradle.javacard')
    }
}

compileJava {
    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

test {
    testLogging.showStandardStreams = true
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
