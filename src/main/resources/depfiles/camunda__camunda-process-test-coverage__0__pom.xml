<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.camunda</groupId>
        <artifactId>camunda-release-parent</artifactId>
        <version>3.7</version>
        <relativePath/>
    </parent>


    <groupId>org.camunda.bpm.extension</groupId>
    <artifactId>camunda-bpm-process-test-coverage-root</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>

    <name>Camunda BPM Process Test Coverage Root</name>
    <description>Helper library to visualize and assert which parts of a BPMN process have been covered by a unit test.</description>

    <modules>
        <module>extension</module>
        <module>bom</module>
        <module>examples</module>
    </modules>

    <properties>
        <version.java>11</version.java>
        <kotlin.version>1.4.32</kotlin.version>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <kotlin-logging.version>2.0.3</kotlin-logging.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Kotlin -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>${kotlin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.github.microutils</groupId>
                <artifactId>kotlin-logging-jvm</artifactId>
                <version>${kotlin-logging.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Kotlin -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>clean install</defaultGoal>
    </build>

    <repositories>
        <repository>
            <id>camunda-bpm-nexus</id>
            <name>camunda-bpm-nexus</name>
            <url>https://app.camunda.com/nexus/content/groups/public</url>
        </repository>
    </repositories>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:camunda/camunda-process-test-coverage.git</connection>
        <url>scm:git:git@github.com:camunda/camunda-process-test-coverage.git</url>
        <developerConnection>scm:git:git@github.com:camunda/camunda-process-test-coverage.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <!-- repositories used for distribution of releases and snapshots, DO NOT CHANGE -->
    <distributionManagement>
        <repository>
            <id>camunda-nexus</id>
            <name>camunda bpm community extensions</name>
            <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-community-extensions</url>
        </repository>
        <snapshotRepository>
            <id>camunda-nexus</id>
            <name>camunda bpm community extensions snapshots</name>
            <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-community-extensions-snapshots</url>
            <!-- for maven 2 compatibility -->
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- Prevent gpg from using pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
