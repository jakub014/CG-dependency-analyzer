buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.5.2"
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.tngtech.jgiven.android.example"
        minSdkVersion 26
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
  jgivenReport
}

dependencies {
  implementation 'com.android.support:appcompat-v7:27.0.2'

  androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })

  androidTestImplementation(project(':jgiven-android')) {
      exclude group: "junit"
      //why does this cause double junit ActiveSuite issue beats me
      //exclude group: "com.google.android.tools"
  }

  jgivenReport project(':jgiven-html5-report')
  jgivenReport 'org.slf4j:slf4j-simple:'+slf4jVersion
}

def targetDir = 'build/reports/jgiven/json'
def adb = android.getAdbExe().toString()
def reportsDir = '/storage/emulated/0/Download/jgiven-reports'

task cleanJGivenReports(type: Delete) {
  delete targetDir
}

task pullJGivenReports(type: Exec, dependsOn: cleanJGivenReports) {
    doFirst {
        if (!file(targetDir).mkdirs()) {
            println("Cannot create dir "+targetDir)
        }
    }

    commandLine adb, 'pull', reportsDir, targetDir

    doLast {
        println("Pulled "+reportsDir+" to "+targetDir);
    }
}

task cleanJGivenReportsFromDevice(type: Exec) {
    commandLine adb, 'shell', 'rm -rf', reportsDir

    doLast {
        println("Deleted "+reportsDir)
    }
}

pullJGivenReports.finalizedBy(cleanJGivenReportsFromDevice)

task cleanJGivenHtmlReport(type: Delete) {
  delete 'build/reports/jgiven/html'
}

task jgivenHtml5Report(type: JavaExec, dependsOn: cleanJGivenHtmlReport) {
    main = 'com.tngtech.jgiven.report.ReportGenerator'
    args '--sourceDir=build/reports/jgiven/json',
         '--targetDir=build/reports/jgiven/html',
         '--format=html5',
         '--exclude-empty-scenarios=true'
        classpath = configurations.jgivenReport
}

pullJGivenReports.finalizedBy(jgivenHtml5Report)

tasks.whenTaskAdded { task ->
  if (task.name == 'connectedAndroidTest') {
    task.finalizedBy 'pullJGivenReports'
  }
}


