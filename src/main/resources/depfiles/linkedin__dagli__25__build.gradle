dependencies {
  api project(':core')
  api project(':common')
  api project(':nn')

  api project(':math-distribution')
  api project(':math-number')
  api project(':math-vector')

  api project.ext.dependencies.deeplearning4j

  testImplementation project.ext.dependencies.'log4j2-slf4j-impl'
  testImplementation project.ext.dependencies.'log4j2-core'

  // ND4J provides linear algebra for DL4J; for testing we use the generic CPU-based library for maximum compatibility:
  testImplementation "org.nd4j:nd4j-native-platform:1.0.0-beta7"
  // if we were using CUDA (with a GPU), we'd use these dependencies instead of nd4j-native-platform:
  // testImplementation "org.nd4j:nd4j-cuda-10.2-platform:1.0.0-beta7" // use CUDA 10.2
  // testImplementation "org.deeplearning4j:deeplearning4j-cuda-10.2:1.0.0-beta7" // allows DL4J to leverage cuDNN
  // Please note that cuDNN support is tied to the CUDA library version (i.e. for CUDA 10.2 you need cuDNN 7.6
  // installed); for details, please see https://deeplearning4j.konduit.ai/config/backends/config-cudnn

  annotationProcessor project(':annotation-processor')
  compileOnly project(':annotation-processor')
}