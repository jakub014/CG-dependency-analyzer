apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.jfrog.bintray'

version = "2.3.5"
group = "com.pnuema.android"
archivesBaseName = 'savestateobserver'

ext {
    siteUrl = 'https://github.com/barnhill/savestateobserver'
    gitUrl = 'https://github.com/barnhill/savestateobserver.git'
    descr = 'Android tool to output the contents sizes of saved state bundles in onSaveInstance state calls'
}

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName version
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation 'junit:junit:4.13.1'
}

dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from dokkaJavadoc.outputDirectory
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'com.pnuema.android:savestateobserver'
                description = 'Android tool to output the contents sizes of saved state bundles in onSaveInstance state calls'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'bbarnhill'
                        name 'Brad Barnhill'
                        email 'bradfordbarnhill@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

bintray {
    if (System.getenv("BINTRAY_USER") != null)
        user = System.getenv("BINTRAY_USER")
    else
        user = BINTRAY_USER

    if (System.getenv("BINTRAY_APIKEY") != null)
        key = System.getenv("BINTRAY_APIKEY")
    else
        key = BINTRAY_APIKEY

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload
    override = false //[Default: false] Whether to override version artifacts already published
    pkg {
        configurations = ['archives']
        repo = "maven"
        name = "savestateobserver"
        desc = descr
        websiteUrl = "https://github.com/barnhill/SaveStateObserver"
        githubRepo = 'barnhill/SaveStateObserver'
        githubReleaseNotesFile = 'README.md'
        issueTrackerUrl = 'https://github.com/barnhill/SaveStateObserver/issues'
        vcsUrl = "https://github.com/barnhill/SaveStateObserver.git"
        licenses = ["Apache-2.0"]
        labels = ['android', 'bundle', 'savestate', 'saveinstancestate', 'savestateobserver', 'aar', 'android']
        publicDownloadNumbers = true
        publish = true
        version {
            gpg {
                sign = true
                if (System.getenv("BINTRAY_GPGPASSWORD") != null)
                    passphrase = System.getenv("BINTRAY_GPGPASSWORD")
                else
                    passphrase = BINTRAY_GPGPASSWORD
            }
        }
    }
}

task createPom {
    pom {
        project {
            packaging 'aar'

            name project.name
            description descr
            url siteUrl
            inceptionYear '2018'

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
            developers {
                developer {
                    id 'barnhill'
                    name 'Brad Barnhill'
                    email 'bradfordbarnhill@gmail.com'
                }
            }
        }
    }.writeTo("$buildDir/poms/pom-default.xml").writeTo("pom.xml")
}
build.dependsOn createPom
build.dependsOn dokkaJavadoc