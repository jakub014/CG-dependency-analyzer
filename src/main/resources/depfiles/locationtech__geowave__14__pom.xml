<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>geowave-parent</artifactId>
		<groupId>org.locationtech.geowave</groupId>
		<relativePath>../</relativePath>
		<version>2.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>geowave-doc</artifactId>
	<name>GeoWave Documentation</name>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<asciidoctor.epub.version>1.5.0-alpha.4</asciidoctor.epub.version>
		<asciidoctor.maven.plugin.version>1.5.2.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.7</asciidoctorj.pdf.version>
		<asciidoctor.pdf.version>1.5.0.alpha.7</asciidoctor.pdf.version>
		<jruby.version>1.7.20.1</jruby.version>
		<maven.build.timestamp.format>EEEEE, MMMMM dd, yyyy 'at' hh:mm a 'UTC'</maven.build.timestamp.format>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>regex-property</id>
						<phase>validate</phase>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>tag.version</name>
							<value>${project.version}</value>
							<regex>\.</regex>
							<replacement>_</replacement>
							<failIfNoMatch>true</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<condition property="isSnapshot">
									<contains string="${project.version}" substring="SNAPSHOT" />
								</condition>
								<condition property="version_url" value="latest">
									<isset property="isSnapshot" />
								</condition>
								<!-- Properties in ant are immutable, so the following assignments 
									will only take place if deployFileUrl is not yet set. -->
								<property name="version_url" value="${project.version}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<nonFilteredFileExtensions>
								<nonFilteredFileExtension>js</nonFilteredFileExtension>
								<nonFilteredFileExtension>css</nonFilteredFileExtension>
								<nonFilteredFileExtension>eot</nonFilteredFileExtension>
								<nonFilteredFileExtension>svg</nonFilteredFileExtension>
								<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
								<nonFilteredFileExtension>png</nonFilteredFileExtension>
								<nonFilteredFileExtension>jpg</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff</nonFilteredFileExtension>
							</nonFilteredFileExtensions>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-downloads</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/downloads/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-userguide</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/userguide/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-devguide</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/devguide/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-commands</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/commands/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-quickstart</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-installation-guide</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/installation-guide/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-overview</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/overview/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-quickstart-emr</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/quickstart-emr/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-aws-env</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/aws-env/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-interact-cluster</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/interact-cluster/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-jupyter</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/jupyter/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-spatial-join</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/spatial-join/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-docs-common-zeppelin</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/quickstart-emr/zeppelin/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/docs-common/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
				<dependencies>
		            <dependency>
		                <groupId>org.apache.maven.shared</groupId>
		                <artifactId>maven-filtering</artifactId>
		                <version>1.3</version>
		            </dependency>
		        </dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-index</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-index" dir="${project.basedir}/content/geowave-index" includes="*.adoc" />
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-index">
									<map from="${project.basedir}/content/geowave-index/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/geowave-index/index.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-installation-guide</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-installation-guide" dir="${project.build.directory}/content/installation-guide" includes="*.adoc">
								  <exclude name="**/installation-guide.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-installation-guide">
									<map from="${project.build.directory}/content/installation-guide/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/installation-guide/installation-guide.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-overview</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-overview" dir="${project.build.directory}/content/overview" includes="*.adoc">
								  <exclude name="**/overview.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-overview">
									<map from="${project.build.directory}/content/overview/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/overview/overview.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-downloads</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-downloads" dir="${project.build.directory}/content/downloads" includes="*.adoc">
								  <exclude name="**/downloads.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-downloads">
									<map from="${project.build.directory}/content/downloads/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/downloads/downloads.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-devguide</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file" dir="${project.build.directory}/content/devguide" includes="*.adoc">
								  <exclude name="**/devguide.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file">
									<map from="${project.build.directory}/content/devguide/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/devguide/devguide.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-userguide</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file" dir="${project.build.directory}/content/userguide" includes="*.adoc">
								  <exclude name="**/userguide.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file">
									<map from="${project.build.directory}/content/userguide/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/userguide/userguide.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-quickstart</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-quickstart" dir="${project.build.directory}/content/quickstart" includes="*.adoc">
								  <exclude name="**/quickstart.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-quickstart">
									<map from="${project.build.directory}/content/quickstart/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart/quickstart.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-quickstart-emr</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-quickstart-emr" dir="${project.build.directory}/content/quickstart-emr/quickstart-emr" includes="*.adoc">
								  <exclude name="**/quickstart-emr.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-quickstart-emr">
									<map from="${project.build.directory}/content/quickstart-emr/quickstart-emr/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/quickstart-emr/quickstart-emr.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-aws-env</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-aws-env" dir="${project.build.directory}/content/quickstart-emr/aws-env" includes="*.adoc">
								  <exclude name="**/aws-env.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-aws-env">
									<map from="${project.build.directory}/content/quickstart-emr/aws-env/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/aws-env/aws-env.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-interact-cluster</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-interact-cluster" dir="${project.build.directory}/content/quickstart-emr/interact-cluster" includes="*.adoc">
								  <exclude name="**/interact-cluster.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-interact-cluster">
									<map from="${project.build.directory}/content/quickstart-emr/interact-cluster/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/interact-cluster/interact-cluster.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-jupyter</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-jupyter" dir="${project.build.directory}/content/quickstart-emr/jupyter" includes="*.adoc">
								  <exclude name="**/jupyter.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-jupyter">
									<map from="${project.build.directory}/content/quickstart-emr/jupyter/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/jupyter/jupyter.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-join</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-join" dir="${project.build.directory}/content/quickstart-emr/spatial-join" includes="*.adoc">
								  <exclude name="**/spatial-join.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-join">
									<map from="${project.build.directory}/content/quickstart-emr/spatial-join/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/spatial-join/spatial-join.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-zeppelin</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-zeppelin" dir="${project.build.directory}/content/quickstart-emr/zeppelin" includes="*.adoc">
								  <exclude name="**/zeppelin.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-zeppelin">
									<map from="${project.build.directory}/content/quickstart-emr/zeppelin/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart-emr/zeppelin/zeppelin.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-commands</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-commands" dir="${project.build.directory}/content/commands" includes="*.adoc">
								  <exclude name="**/commands.adoc" />
								</fileset>
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-commands">
									<map from="${project.build.directory}/content/commands/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/commands/commands.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<configuration>
					<doctype>book</doctype>
					<outputDirectory>../target/site</outputDirectory>
					<gemPath>${project.build.directory}/gems-provided</gemPath>
					<attributes>
						<sourcedir>${project.build.sourceDirectory}</sourcedir>
					</attributes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>pdf</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj.pdf.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>generate-pdf-overview</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/overview</sourceDirectory>
									<sourceDocumentName>overview.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-installation-guide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/installation-guide</sourceDirectory>
									<sourceDocumentName>installation-guide.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							
							<execution>
								<id>generate-pdf-quickstart-emr</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/quickstart-emr</sourceDirectory>
									<sourceDocumentName>quickstart-emr.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-aws-env</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/aws-env</sourceDirectory>
									<sourceDocumentName>aws-env.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-interact-cluster</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/interact-cluster</sourceDirectory>
									<sourceDocumentName>interact-cluster.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-jupyter</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/jupyter</sourceDirectory>
									<sourceDocumentName>jupyter.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-join</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/spatial-join</sourceDirectory>
									<sourceDocumentName>spatial-join.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-zeppelin</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/zeppelin</sourceDirectory>
									<sourceDocumentName>zeppelin.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>epub</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-epub3</artifactId>
								<version>${asciidoctor.epub.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>generate-epub-overview</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/overview</sourceDirectory>
									<sourceDocumentName>overview.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-installation-guide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/installation-guide</sourceDirectory>
									<sourceDocumentName>installation-guide.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-quickstart-emr</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/quickstart-emr</sourceDirectory>
									<sourceDocumentName>quickstart-emr.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-aws-env</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/aws-env</sourceDirectory>
									<sourceDocumentName>aws-env.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-interact-cluster</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/interact-cluster</sourceDirectory>
									<sourceDocumentName>interact-cluster.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-jupyter</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/jupyter</sourceDirectory>
									<sourceDocumentName>jupyter.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-join</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/spatial-join</sourceDirectory>
									<sourceDocumentName>spatial-join.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-zeppelin</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/zeppelin</sourceDirectory>
									<sourceDocumentName>zeppelin.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>html</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-html-index</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/geowave-index</sourceDirectory>
									<sourceDocumentName>index.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<stylesheet>blank.css</stylesheet>
										<title>GeoWave</title>
										<imagesdir>./images</imagesdir>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-overview</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/overview</sourceDirectory>
									<sourceDocumentName>overview.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>../geowave-index/stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-downloads</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/downloads</sourceDirectory>
									<sourceDocumentName>downloads.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<title>GeoWave Downloads</title>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-installation-guide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/installation-guide</sourceDirectory>
									<sourceDocumentName>installation-guide.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-quickstart-emr</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/quickstart-emr</sourceDirectory>
									<sourceDocumentName>quickstart-emr.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-aws-env</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/aws-env</sourceDirectory>
									<sourceDocumentName>aws-env.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>right</toc>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-interact-cluster</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/interact-cluster</sourceDirectory>
									<sourceDocumentName>interact-cluster.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-jupyter</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/jupyter</sourceDirectory>
									<sourceDocumentName>jupyter.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-join</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/spatial-join</sourceDirectory>
									<sourceDocumentName>spatial-join.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-zeppelin</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart-emr/zeppelin</sourceDirectory>
									<sourceDocumentName>zeppelin.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<toc>left</toc>
										<revdate>${maven.build.timestamp}</revdate>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
