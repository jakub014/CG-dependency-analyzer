plugins {
  id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
  mavenLocal()
  mavenCentral()
}

sourceCompatibility = 11

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
  }
}

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

dependencies {

  // Logging
  compile "org.slf4j:slf4j-api"

  // Spring
  compile "org.apache.httpcomponents:httpclient"
  compile "org.springframework:spring-web"
  compile "org.springframework:spring-context-support"
  compile "org.springframework.security:spring-security-config"
  compile "org.springframework.security:spring-security-web"

  // JSON
  compile "com.fasterxml.jackson.core:jackson-databind"

  // Security
  compile "com.madgag.spongycastle:prov:$spongycastleVersion"
  compile "com.madgag.spongycastle:pkix:$spongycastleVersion"
  compile "com.madgag.spongycastle:pg:$spongycastleVersion"

  // Misc
  compile "com.google.guava:guava:$guavaVersion"
  compile "com.foilen:jl-incubator:$smalltoolsVersion"
  compile "com.foilen:jl-smalltools:$smalltoolsVersion"
  compile 'javax.annotation:javax.annotation-api:1.3.2'
  compile "javax.servlet:javax.servlet-api"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives javadocJar, sourcesJar
}

signing {
  required { isReleaseVersion && gradle.taskGraph.hasTask(":uploadArchives") }
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: System.getenv('OSSRH_USER'), password: System.getenv('OSSRH_PASS'))
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: System.getenv('OSSRH_USER'), password: System.getenv('OSSRH_PASS'))
      }

      pom.project {
        name = "foilen-login-api"
        packaging 'jar'
        artifactId 'foilen-login-api'
        description 'This is the login service API'
        url 'https://github.com/foilen/foilen-login-api'

        scm {
          connection = "scm:git:git@github.com:foilen/foilen-login-api.git"
          url = "https://github.com/foilen/foilen-login-api"
        }

        licenses {
          license {
            name = "MIT"
            url = "https://opensource.org/licenses/MIT"
          }
        }

        developers {
          developer {
            id 'foilen'
            name 'Simon Levesque'
            email 'simon@foilen.com'
          }
        }
      }
    }
  }
}
