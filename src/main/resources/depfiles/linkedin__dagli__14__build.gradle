dependencies {
  // We're using Dagli's nn-dl4j module, which is backed by DeepLearning4J.  DL4J has several backends depending on
  // whether you want to use your GPU (CUDA), CPU, CPU with AVX2 instructions, etc.  Please see
  // https://deeplearning4j.konduit.ai/config/backends for more information.

  // By default, we use the generic CPU-based backend for maximum compatibility:
  implementation "org.nd4j:nd4j-native-platform:1.0.0-beta7"
  // To use CUDA (with a GPU), use these dependencies instead of nd4j-native-platform:
  // implementation "org.nd4j:nd4j-cuda-10.2-platform:1.0.0-beta7" // requires CUDA 10.2
  // implementation "org.deeplearning4j:deeplearning4j-cuda-10.2:1.0.0-beta7" // allows DL4J to leverage cuDNN 7.6

  // Please note that cuDNN support is tied to the CUDA library version (i.e. for CUDA 10.2 you need cuDNN 7.6
  // installed); for details, please see https://deeplearning4j.konduit.ai/config/backends/config-cudnn

  implementation project(':common')
  implementation project(':data')
  implementation project(':nn-dl4j')
  implementation project(':text')
  implementation project(':text-tokenization')

  // DL4J uses SLF4J, but Dagli uses Log4j2. log4j2-slf4j-impl provides a bridge between these such that DL4J's log
  // messages are passed to the Log4j2 API:
  implementation project.ext.dependencies.'log4j2-slf4j-impl'

  // Logging implementation that will allow Log4j2 to print everything onto the console
  implementation project.ext.dependencies.'log4j2-core'

  // without the annotation processor, we can't build our CharacterDialogStruct:
  annotationProcessor project(':annotation-processor')
  compileOnly project(':annotation-processor')
}