buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group 'io.gitlab.hohserg.elegant.networking'
version '2.8'
archivesBaseName = 'annotation-processor'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.8'
    compile 'com.google.guava:guava:21.0'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'com.squareup:javapoet:1.13.0'
    compile project(':ElegantNetworkingCommon')
}

shadowJar {
    relocate 'com.google', 'shadow.com.google'
    relocate 'com.squareup', 'shadow.com.squareup'
    relocate 'org.apache', 'shadow.org.apache'

    minimize()

    classifier = null
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

signing {
    required { project.hasProperty("signing.keyId") }
    sign sourcesJar
    sign javadocJar
    sign shadowJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            def localRepo = 'file://localhost/' + new File(project.getProjectDir(), 'repo').getAbsolutePath()
            repository(url: localRepo) {
                if (project.hasProperty("ossrhUsername"))
                    authentication userName: "$ossrhUsername", password: "$ossrhPassword"
            }

            pom.artifactId = 'annotation-processor'
            pom.project {
                name 'ElegantNetworking Annotation Processor'
                packaging 'jar'
                description 'This is a annotation processor for ElegantNetworking. Intended for code-generation of packet serializers'
                url 'https://github.com/ElegantNetworking/ElegantNetworkingRoot'

                scm {
                    connection = 'scm:git:https://github.com/ElegantNetworking/ElegantNetworkingAnnotationProcessor.git'
                    developerConnection = 'scm:git:git@github.com:https://github.com/ElegantNetworking/ElegantNetworkingAnnotationProcessor.git'
                    url = 'https://github.com/ElegantNetworking/ElegantNetworkingAnnotationProcessor'
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://raw.githubusercontent.com/ElegantNetworking/ElegantNetworkingAnnotationProcessor/master/LICENSE.md'
                    }
                }

                developers {
                    developer {
                        id = 'hohserg'
                        name = 'hohserg'
                        email = 'hohserg1@yandex.ru'
                    }
                }
            }
            pom.whenConfigured {
                p ->
                    p.dependencies = p.dependencies.findAll {
                        dep -> false
                    }
            }
        }
    }
}