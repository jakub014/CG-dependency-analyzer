plugins {
    id 'base'
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.10.1'
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

allprojects {
    group 'io.hosuaby'
    version '0.3.0-SNAPSHOT'

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    apply plugin: 'java'
    apply plugin: 'jacoco'
}

def publishedProjectsPaths = [
        ':inject-resources-core',
        ':inject-resources-commons',
        ':inject-resources-spring',
        ':inject-resources-spring:tests-with-jackson',
        ':inject-resources-spring:tests-with-gson',
        ':inject-resources-junit-jupiter',
        ':inject-resources-junit-jupiter:tests-with-jackson',
        ':inject-resources-junit-jupiter:tests-with-gson',
        ':inject-resources-junit-vintage'
]

def publishedProjects = subprojects.findAll { subproject ->
    publishedProjectsPaths.contains(subproject.path)
}

task jacocoMerge(type: JacocoMerge) {
    publishedProjects.each { subproject ->
        executionData subproject.tasks.withType(Test)
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn publishedProjects.jacocoTestReport, project.jacocoMerge

    additionalSourceDirs.from(files(publishedProjects.sourceSets.main.allSource.srcDirs))
    sourceDirectories.from(files(publishedProjects.sourceSets.main.allSource.srcDirs))
    classDirectories.from(files(publishedProjects.sourceSets.main.output))

    executionData(jacocoMerge.destinationFile)

    reports {
        html.enabled = true
        xml.enabled = true
    }
}

coveralls {
    sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

asciidoctor {
    sourceDir project.rootDir
    attributes 'project-version': project.version
    outputDir "docs/${project.version}/asciidoc"
}
