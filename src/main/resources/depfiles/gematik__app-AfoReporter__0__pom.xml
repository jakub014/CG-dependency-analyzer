<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.gematik.idp.aforeporter</groupId>
  <artifactId>aforeporter</artifactId>
  <packaging>jar</packaging>
  <version>1.2.1</version>
  <name>Gematik Afo Reporter</name>
  <description>
    Mit Hilfe des Afo Reporters können, basierend auf in JSON Dateien hinterlegten Anforderungen,
    mit BDD/Serenity bzw. JUnit Testfälle/Ergebnissen verlinkt als Testbericht dargestellt werden.
  </description>
  <url>https://github.com/gematik/app-AfoReporter</url>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <junit-platform.version>5.4.2</junit-platform.version>
    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/site/jacoco/index.xml
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.language>java</sonar.language>
  </properties>

  <scm>
    <url>https://github.com/gematik/app-AfoReporter</url>
    <connection>scm:git:git://github.com/gematik/app-AfoReporter.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:gematik/app-AfoReporter.git</developerConnection>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/gematik/app-AfoReporter/issues</url>
  </issueManagement>

  <organization>
    <name>gematik GmbH</name>
    <url>http://www.gematik.de</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>gematik</name>
      <email>software-development@gematik.de</email>
      <url>https://gematik.github.io/</url>
      <organization>gematik GmbH</organization>
      <organizationUrl>https://www.gematik.de/</organizationUrl>
    </developer>
  </developers>

  <profiles>
    <profile>
      <id>external</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.7</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
              <stagingProgressTimeoutMinutes>20</stagingProgressTimeoutMinutes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <!-- Misc -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.12</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.7</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.30</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>1.78</version>
    </dependency>
    <dependency>
      <groupId>com.github.javaparser</groupId>
      <artifactId>javaparser-core</artifactId>
      <version>3.16.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.11.2</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.json/json -->
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20201115</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.18.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>5.2.9.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.11</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/version.txt</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>**/version.txt</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>

      <!-- install: copy readme.md from doc to basedir and workflow.plantuml to src/java/...aforeport/doc-files
                replacing @project.version@ with current value.
            -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>readme-md</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>.</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/doc/templates</directory>
                  <includes>
                    <include>README.md</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
          <execution>
            <id>workflow.plantuml</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.basedir}/src/main/java/de/gematik/idp/tests/aforeport/doc-files
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/doc/templates</directory>
                  <includes>
                    <include>workflow.plantuml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
          <execution>
            <id>svg-to-doc-images</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.basedir}/doc/images</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/target/plantuml/src/main/java/de/gematik/idp/tests/aforeport/doc-files
                  </directory>
                  <includes>
                    <include>*.svg</include>
                  </includes>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
          <execution>
            <id>svg-to-doc-files</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.basedir}/src/main/java/de/gematik/idp/tests/aforeport/doc-files
              </outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/target/plantuml/src/main/java/de/gematik/idp/tests/aforeport/doc-files
                  </directory>
                  <includes>
                    <include>*.svg</include>
                  </includes>
                </resource>
              </resources>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- create aforeporter.plantuml file -->
      <plugin>
        <groupId>ch.ifocusit.livingdoc</groupId>
        <artifactId>livingdoc-maven-plugin</artifactId>
        <version>1.19</version>
        <executions>
          <execution>
            <id>generate-living-doc-class-diagramm</id>
            <phase>compile</phase>
            <goals>
              <goal>diagram</goal>
            </goals>
            <configuration>
              <generatedDocsDirectory>src/main/java/de/gematik/idp/tests/aforeport/doc-files
              </generatedDocsDirectory>
              <diagramTitle>Klassenabhängigkeiten</diagramTitle>
              <diagramOutputFilename>aforeporter</diagramOutputFilename>
              <packageRoot>de.gematik.idp.tests.aforeport</packageRoot>
              <format>plantuml</format>
              <diagramWithLink>true</diagramWithLink>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.jeluard</groupId>
        <artifactId>plantuml-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>generate-living-doc-class-diagramm</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <sourceFiles>
                <directory>${basedir}</directory>
                <includes>
                  <include>src/main/java/de/**/*.plantuml</include>
                </includes>
              </sourceFiles>
              <verbose>true</verbose>
              <format>svg</format>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.plantuml</groupId>
            <artifactId>plantuml</artifactId>
            <version>1.2021.1</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <file>${project.basedir}/target/plantuml/src/main/java/de/gematik/idp/tests/aforeport/doc-files/workflow.svg
          </file>
          <replacements>
            <replacement>
              <token>style="width:</token>
              <value>style="background:#fdfdfd;width:</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <argLine>${surefireArgLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <configuration>
            </configuration>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
          </execution>
        </executions>
      </plugin>

      <!-- to upload jacoco results to sonar server via mvn sonar:sonar-->
      <plugin>
        <artifactId>sonar-maven-plugin</artifactId>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <version>3.7.0.1746</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doctitle>IDP AfoReporter</doctitle>
          <show>private</show>
          <nohelp>true</nohelp>
          <doclet>nl.talsmasoftware.umldoclet.UMLDoclet</doclet>
          <docletArtifact>
            <groupId>nl.talsmasoftware</groupId>
            <artifactId>umldoclet</artifactId>
            <version>2.0.12</version>
          </docletArtifact>
          <docfilessubdirs>true</docfilessubdirs>
          <sourcepath>src/main/java</sourcepath>
          <doclint>none</doclint>
        </configuration>
      </plugin>

      <!-- create maven site web pages -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- create aforeporter jar archive -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <mainClass>de.gematik.idp.tests.aforeport.AfoReporter</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- exec goals to run aforeporter (not triggered automatically) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>aforeporter</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <arguments>
                <argument>-bdd</argument>
                <argument>../idp-global/idp-testsuite/src/test/resources/features</argument>
                <argument>-rr</argument>
                <argument>../idp-global/idp-testsuite/target/site/serenity</argument>
              </arguments>
              <mainClass>de.gematik.idp.tests.aforeport.AfoReporter</mainClass>
              <cleanupDaemonThreads>false</cleanupDaemonThreads>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <show>private</show>
          <nohelp>true</nohelp>
          <doctitle>IDP AfoReporter</doctitle>
          <doclet>nl.talsmasoftware.umldoclet.UMLDoclet</doclet>
          <docletArtifact>
            <groupId>nl.talsmasoftware</groupId>
            <artifactId>umldoclet</artifactId>
            <version>2.0.12</version>
          </docletArtifact>
          <docfilessubdirs>true</docfilessubdirs>
          <sourcepath>src/main/java</sourcepath>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
