/*
 * Copyright 2016 SimplifyOps, Inc. (http://simplifyops.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext.pluginClassNames='org.rundeck.plugin.scm.git.GitExportPluginFactory,org.rundeck.plugin.scm.git.GitImportPluginFactory'
ext.pluginName = 'Git Plugin'
ext.pluginDescription = 'Export and Import Jobs with a Git repository'

apply plugin: "groovy"
configurations{
    pluginLibs

    //declare compile to extend from pluginLibs so it inherits the dependencies
    compile {
        extendsFrom pluginLibs
    }
}
repositories {
    mavenLocal()
    maven{ //snapshot dependency
        url='https://oss.sonatype.org/content/repositories/snapshots/'
    }
    mavenCentral()
}

dependencies {
    compile project(":core")
    pluginLibs( 'org.eclipse.jgit:org.eclipse.jgit:5.6.0.201912101111-r') {
        exclude module: 'jsch'
        exclude module: 'slf4j-api'
        exclude group: 'org.bouncycastle'
    }
    compile 'org.slf4j:slf4j-api:1.7.29'
    compile "org.codehaus.groovy:groovy:${groovyVersion}"

    compile ("org.bouncycastle:bcprov-jdk15on:${bouncyCastleVersion}")
    compile ("org.bouncycastle:bcpg-jdk15on:${bouncyCastleVersion}")
    testCompile 'junit:junit:4.8.1',
                'org.mockito:mockito-all:1.10.19'

    testCompile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    testCompile "cglib:cglib-nodep:2.2.2"
    testCompile "org.spockframework:spock-core:1.3-groovy-2.5"

    testCompile( 'org.eclipse.jgit:org.eclipse.jgit:5.6.0.201912101111-r')
}


// task to copy plugin libs to output/lib dir
task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}

jar {
    from "$buildDir/output"
    manifest {
        attributes 'Rundeck-Plugin-Classnames': pluginClassNames
        attributes 'Rundeck-Plugin-Name': pluginName
        attributes 'Rundeck-Plugin-Description': pluginDescription
        def libList = configurations.pluginLibs.collect { 'lib/' + it.name }.join(' ')
        attributes 'Rundeck-Plugin-Libs': "${libList}"
    }
}

//set jar task to depend on copyToLib
jar.dependsOn(copyToLib)


apply plugin: 'maven'
task('createPom').doLast {
    pom {
        project {
            artifactId project.name
            groupId "org.rundeck.plugins"
            inceptionYear '2015'
            packaging 'jar'
            version version
            name( 'Rundeck '+pluginName)
            url 'http://rundeck.org'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            parent{
                groupId 'com.dtolabs.rundeck'
                artifactId "rundeck-bundled-plugins"
                version(version)
            }
            build{
                plugins{
                    plugin{
                        groupId 'org.apache.maven.plugins'
                        artifactId 'maven-jar-plugin'
                        version '2.3.2'
                        configuration{
                            archive{
                                manifestEntries{
                                    'Rundeck-Plugin-Classnames'(pluginClassNames)
                                    'Rundeck-Plugin-File-Version' version
                                    'Rundeck-Plugin-Version' rundeckPluginVersion
                                    'Rundeck-Plugin-Archive' 'true'
                                    'Rundeck-Plugin-Name' pluginName
                                    'Rundeck-Plugin-Description' pluginDescription
                                }
                            }
                        }
                    }
                }
            }
        }
    }.writeTo("pom.xml")
}
