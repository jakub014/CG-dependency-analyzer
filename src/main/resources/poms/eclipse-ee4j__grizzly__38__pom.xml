<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2009, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.grizzly</groupId>
        <artifactId>grizzly-project</artifactId>
        <version>3.0.0-SNAPSHOT</version>
        <relativePath>../../../pom.xml</relativePath>
    </parent>

    <groupId>org.glassfish.grizzly.osgi</groupId>
    <artifactId>grizzly-httpservice-bundle</artifactId>
    <packaging>jar</packaging>

    <name>Grizzly OSGi HttpService Bundle</name>

    <dependencies>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.osgi.foundation</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.grizzly</groupId>
            <artifactId>grizzly-http-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.grizzly</groupId>
            <artifactId>grizzly-comet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.grizzly.osgi</groupId>
            <artifactId>grizzly-httpservice</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <filesets>
                        <!-- Make sure we remove the fake source directory. -->
                        <fileset>
                            <directory>src</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <excludes>
                        <exclude>module-info.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${felix-version}</version>
                <configuration>
                    <instructions>
                        <Bundle-Name>Grizzly OSGi HttpService Bundle
                        </Bundle-Name>
                        <Bundle-Description>An implementation of the OSGi
                            HttpService using Grizzly.
                        </Bundle-Description>
                        <Bundle-Activator>
                            org.glassfish.grizzly.osgi.httpservice.Activator
                        </Bundle-Activator>
                        <Bundle-Vendor>Grizzly Devs</Bundle-Vendor>
                        <Import-Package>
                            *
                        </Import-Package>
                        <Export-Package>
                            org.glassfish.grizzly.*;version=${project.version};-split-package:=merge-first,
                            jakarta.servlet.*;-split-package:=merge-first;version=${servlet-version},
                            org.glassfish.gmbal*;version=${gmbal.version}
                        </Export-Package>
                        <Export-Service>
                            org.osgi.service.http.HttpService;version=1.2
                        </Export-Service>
                    </instructions>
                    <unpackBundle>true</unpackBundle>
                </configuration>
                <executions>
                    <execution>
                        <id>osgi-bundle</id>
                        <phase>package</phase>
                        <goals>
                            <goal>bundle</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <sourcepath>
                        ${basedir}/../../grizzly-httpservice/src/main/java;
                        ${basedir}/../../../modules/bundles/http-servlet/src/main/java;
                    </sourcepath>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fudge-source</id>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <configuration>
                            <target>
                                <delete dir="src" includeemptydirs="true" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>src-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <!-- use copy-dependencies instead if you don't want to explode the sources -->
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <classifier>sources</classifier>
                            <excludeScope>provided</excludeScope>
                            <excludeArtifactIds>junit, hamcrest-core</excludeArtifactIds>
                            <!-- fudge an actual source hierarchy so that the source
                                 plugin can actually do something useful.  Otherwise,
                                 you'll end up with an empty source jar -->
                            <outputDirectory>${basedir}/src/main/java</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
