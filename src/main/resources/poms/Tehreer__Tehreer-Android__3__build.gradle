apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'tehreer-android'

    publishedGroupId = 'com.github.mta452'
    publishedArtifactId = 'tehreer-android'

    libraryName = 'Tehreer-Android'
    libraryVersion = '2.6'
    libraryDescription = 'A library that gives full control over text related technologies such as bidirectional algorithm, open type shaping, text typesetting and text rendering.'

    siteUrl = 'https://github.com/Tehreer/Tehreer-Android'
    gitUrl = 'https://github.com/Tehreer/Tehreer-Android.git'

    developerId = 'mta452'
    developerName = 'Muhammad Tayyab Akram'
    developerEmail = 'dear_tayyab@yahoo.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = [ 'Apache-2.0' ]
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

group = publishedGroupId
version = libraryVersion

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 7
        versionName libraryVersion
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        androidTest {
            externalNativeBuild {
                ndkBuild {
                    path 'src/androidTest/jni/Android.mk'
                }
            }
        }
        main {
            externalNativeBuild {
                ndkBuild {
                    path 'src/main/jni/Android.mk'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            externalNativeBuild {
                ndkBuild {
                    cFlags '-fvisibility=hidden'
                    cppFlags '-fvisibility=hidden'
                    arguments 'APP_LDFLAGS+=-s'
                }
            }
        }
    }
}

configurations {
    doclet
}

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    doclet project(':doclet')
}

// Configure artifacts
artifacts {
    task apiDocs(type: Javadoc, dependsOn: configurations.doclet) {
        title = "$libraryName $libraryVersion API"
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        exclude '**/internal/**'

        options.doclet = "ExcludeDoclet"
        options.docletpath = configurations.doclet.files.asType(List)
        options.links("https://developer.android.com/reference/")
        options.addStringOption("bottom", "Copyright &copy; 2021 $developerName. All rights reserved.")
    }

    task javadocJar(type: Jar, dependsOn: apiDocs) {
        classifier = 'javadoc'
        from apiDocs.destinationDir
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    archives javadocJar
    archives sourcesJar
}

// Configure android-maven-gradle-plugin
install {
    repositories.mavenInstaller.pom.project {
        packaging 'aar'
        groupId publishedGroupId
        artifactId publishedArtifactId

        name libraryName
        description libraryDescription
        url siteUrl

        licenses {
            license {
                name licenseName
                url licenseUrl
            }
        }
        developers {
            developer {
                id developerId
                name developerName
                email developerEmail
            }
        }
        scm {
            url siteUrl
            connection gitUrl
            developerConnection gitUrl
        }
    }
}

// Configure gradle-bintray-plugin
bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apikey')
    configurations = ['archives']

    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = properties.getProperty('bintray.gpg.password')
            }
        }
    }
}
