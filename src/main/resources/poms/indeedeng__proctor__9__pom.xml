<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.indeed</groupId>
        <artifactId>proctor-parent</artifactId>
        <!--This version is not used in latest release. See https://mvnrepository.com/artifact/com.indeed/proctor-parent -->
        <version>9999-SNAPSHOT</version>
    </parent>

    <artifactId>proctor-webapp</artifactId>
    <packaging>war</packaging>

    <scm> <!-- prevent Maven from trying to override with subproject suffix -->
        <url>${project.parent.scm.url}</url>
        <connection>${project.parent.scm.connection}</connection>
        <developerConnection>${project.parent.scm.developerConnection}</developerConnection>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>combine-css</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>aggregate-css</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>../proctor-webapp/src/main/resources/META-INF/resources/static/</sourceDirectory>
                            <includes>
                                <include>lib/normalize/normalize.css</include>
                                <include>lib/normalize/normalize.css</include>
                                <include>lib/foundation/stylesheets/foundation.css</include>
                                <include>lib/oocss/mod.css</include>
                                <include>lib/oocss/media.css</include>
                                <include>lib/oocss/space.css</include>
                                <include>styles/app.css</include>
                            </includes>
                            <output>${project.build.outputDirectory}/META-INF/resources/static/styles/styles-compiled.css</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target name="prepare-compile-js-closure">
                                <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath" />
                                <if>
                                    <not>
                                        <available file="${basedir}/target/closure-compiler-v${closure-compiler.version}.jar" />
                                    </not>
                                    <then>
                                        <get src="${closure-compiler-url}" dest="${basedir}/target" />
                                        <unzip src="${basedir}/target/${closure-compiler-zip}" dest="${basedir}/target/">
                                            <patternset>
                                                <include name="*.jar" />
                                            </patternset>
                                        </unzip>
                                    </then>
                                </if>
                                <if>
                                    <not>
                                        <available file="${basedir}/target/closure-library/" />
                                    </not>
                                    <then>
                                        <get src="${closure-library-url}" dest="${basedir}/target" />
                                        <unzip src="${basedir}/target/${closure-library-zip}" dest="${basedir}/target/closure-library">
                                        </unzip>
                                    </then>
                                </if>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <configuration>
                            <executable>java</executable>
                            <workingDirectory>${basedir}/target</workingDirectory>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${basedir}/target/closure-compiler-v${closure-compiler.version}.jar</argument>
                                <argument>--js=${basedir}/src/main/resources/META-INF/resources/static/scripts/app/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/closure/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/third_party/**.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_test.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_tests.js</argument>
                                <argument>--entry_point=goog:indeed.proctor.app.editor</argument>
                                <argument>--js_output_file=${project.build.outputDirectory}/META-INF/resources/static/scripts/app/editor-compiled.js</argument>
                            </arguments>
                        </configuration>
                        <id>compile editor.js</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <configuration>
                            <executable>java</executable>
                            <workingDirectory>${basedir}/target</workingDirectory>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${basedir}/target/closure-compiler-v${closure-compiler.version}.jar</argument>
                                <argument>--js=${basedir}/src/main/resources/META-INF/resources/static/scripts/app/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/closure/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/third_party/**.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_test.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_tests.js</argument>
                                <argument>--entry_point=goog:indeed.proctor.app.details</argument>
                                <argument>--js_output_file=${project.build.outputDirectory}/META-INF/resources/static/scripts/app/details-compiled.js</argument>
                            </arguments>
                        </configuration>
                        <id>compile details.js</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <configuration>
                            <executable>java</executable>
                            <workingDirectory>${basedir}/target</workingDirectory>
                            <arguments>
                                <argument>-jar</argument>
                                <argument>${basedir}/target/closure-compiler-v${closure-compiler.version}.jar</argument>
                                <argument>--js=${basedir}/src/main/resources/META-INF/resources/static/scripts/app/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/closure/**.js</argument>
                                <argument>--js=${basedir}/target/closure-library/closure-library-${closure-library.version}/third_party/**.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_test.js</argument>
                                <argument>--js=!${basedir}/target/closure-library/**_tests.js</argument>
                                <argument>--entry_point=goog:indeed.proctor.app.matrix.list</argument>
                                <argument>--js_output_file=${project.build.outputDirectory}/META-INF/resources/static/scripts/app/matrix-list-compiled.js</argument>
                            </arguments>
                        </configuration>
                        <id>compile matrix-list.js</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>copy</goal></goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.jsimone</groupId>
                                    <artifactId>webapp-runner</artifactId>
                                    <version>7.0.40.0</version>
                                    <destFileName>webapp-runner.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- Else jsimone web-runner fails to find classes in WAR -->
                    <archiveClasses>true</archiveClasses>
                </configuration>
            </plugin>
            <plugin>
                <!-- try shading usages of apache-el even if module currently does not use, in case it is used in the future -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


    <dependencies>
        <dependency>
            <groupId>com.indeed</groupId>
            <artifactId>proctor-webapp-library</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jasper-el</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-el-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--Servlet-Container provided dependencies-->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jasper-el</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-el-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>

    <properties>
        <closure-library.version>20200224</closure-library.version>
        <closure-library-zip>v${closure-library.version}.zip</closure-library-zip>
        <closure-library-url>https://github.com/google/closure-library/archive/${closure-library-zip}</closure-library-url>
        <closure-library-dir>${basedir}/target/closure-library/closure-library-${closure-library.version}</closure-library-dir>
        <closure-compiler.version>20200315</closure-compiler.version>
        <closure-compiler-zip>compiler-${closure-compiler.version}.zip</closure-compiler-zip>
        <closure-compiler-url>http://dl.google.com/closure-compiler/${closure-compiler-zip}</closure-compiler-url>
    </properties>
</project>
