<!--

    Copyright (c) 2019 Repackage Tests Maven Plugin
    project contributors as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.l2x6.rpkgtests</groupId>
  <artifactId>rpkgtests-maven-plugin</artifactId>
  <version>0.10.0-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

  <name>Repackage Tests Maven Plugin</name>
  <description>A Maven plugin to transform a test-jar to a "normal" jar</description>

  <url>https://github.com/ppalaga/rpkgtests-maven-plugin</url>
  <inceptionYear>2019</inceptionYear>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>ppalaga</id>
      <name>Peter Palaga</name>
      <timezone>Europe/Prague</timezone>
    </developer>
  </developers>

  <prerequisites>
    <maven>3.3.1</maven>
  </prerequisites>

  <scm>
    <connection>scm:git:git@github.com:ppalaga/rpkgtests-maven-plugin.git</connection>
    <developerConnection>scm:git:git@github.com:ppalaga/rpkgtests-maven-plugin.git</developerConnection>
    <url>https://github.com/ppalaga/rpkgtests-maven-plugin</url>
    <tag>head</tag>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/ppalaga/rpkgtests-maven-plugin/issues</url>
  </issueManagement>
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>${snapshots.repo.url}</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>${releases.repo.url}</url>
    </repository>
    <!-- <site>
      <id>github</id>
      <url>scm:git:git@github.com:ppalaga/rpkgtests-maven-plugin.git</url>
    </site> -->
  </distributionManagement>

  <properties>

    <!-- Dependency versions in alphabectic order -->
    <version.com.sun.xml.bind>2.3.0</version.com.sun.xml.bind>
    <version.javax.activation>1.2.0</version.javax.activation>
    <version.junit>4.12</version.junit>
    <version.org.apache.maven>3.3.9</version.org.apache.maven>
    <version.org.apache.maven.maven-project>3.0-alpha-2</version.org.apache.maven.maven-project>
    <version.org.apache.maven.plugin-tools>3.5</version.org.apache.maven.plugin-tools>
    <version.org.apache.maven.shared.maven-artifact-transfer>0.11.0</version.org.apache.maven.shared.maven-artifact-transfer>
    <version.org.apache.maven.shared.file-management>3.0.0</version.org.apache.maven.shared.file-management>
    <version.org.codehaus.plexus.plexus-utils>3.0.17</version.org.codehaus.plexus.plexus-utils>
    <version.org.ec4j.core>0.2.1</version.org.ec4j.core>
    <version.org.freemarker>2.3.28</version.org.freemarker>
    <version.org.slf4j>1.7.5</version.org.slf4j>

    <!-- Plugins and their dependencies -->
    <version.com.github.github.site-maven-plugin>0.12</version.com.github.github.site-maven-plugin>
    <version.com.mycila.license-maven-plugin>3.0</version.com.mycila.license-maven-plugin>
    <version.formatter-maven-plugin>2.11.0</version.formatter-maven-plugin>
    <version.impsort-maven-plugin>1.3.2</version.impsort-maven-plugin>
    <version.maven-antrun-plugin>1.8</version.maven-antrun-plugin>
    <version.maven-clean-plugin>2.6.1</version.maven-clean-plugin>
    <version.maven-compiler-plugin>3.3</version.maven-compiler-plugin>
    <version.maven-deploy-plugin>2.8.2</version.maven-deploy-plugin>
    <version.maven-enforcer-plugin>1.4.1</version.maven-enforcer-plugin>
    <version.maven-gpg-plugin>1.6</version.maven-gpg-plugin>
    <version.maven-install-plugin>2.5.2</version.maven-install-plugin>
    <version.maven-invoker-plugin>3.2.1</version.maven-invoker-plugin>
    <version.maven-jar-plugin>2.6</version.maven-jar-plugin>
    <version.maven-javadoc-plugin>2.10.3</version.maven-javadoc-plugin>
    <version.maven-plugin-plugin>3.5.2</version.maven-plugin-plugin>
    <version.maven-project-info-reports-plugin>2.9</version.maven-project-info-reports-plugin>
    <version.maven-release-plugin>2.5.3</version.maven-release-plugin>
    <version.maven-resources-plugin>2.7</version.maven-resources-plugin>
    <version.maven-scm-plugin>1.9.4</version.maven-scm-plugin>
    <version.maven-site-plugin>3.6</version.maven-site-plugin>
    <version.maven-source-plugin>2.4</version.maven-source-plugin>
    <version.maven-surefire-plugin>3.0.0-M4</version.maven-surefire-plugin>
    <version.nexus-staging-maven-plugin>1.6.8</version.nexus-staging-maven-plugin>
    <version.org.codehaus.buildnumber-maven-plugin>1.4</version.org.codehaus.buildnumber-maven-plugin>
    <version.mrm-maven-plugin>1.0.0</version.mrm-maven-plugin>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- maven-compiler-plugin -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>

    <!-- license-maven-plugin -->
    <license.failIfMissing>true</license.failIfMissing>
    <license.failIfUnknown>true</license.failIfUnknown>

    <!-- -Xdoclint:none disables javadoc validation -->
    <javadoc.doclint>-Xdoclint:none</javadoc.doclint>

    <!-- nexus-staging-maven-plugin -->
    <autoReleaseAfterClose>true</autoReleaseAfterClose>

    <!-- Repository Deployment URLs -->
    <oss.nexus.base.url>https://oss.sonatype.org</oss.nexus.base.url>
    <releases.repo.url>${oss.nexus.base.url}/service/local/staging/deploy/maven2/</releases.repo.url>
    <snapshots.repo.url>${oss.nexus.base.url}/content/repositories/snapshots/</snapshots.repo.url>

    <!-- maven-surefire-plugin -->
    <surefire.useFile>false</surefire.useFile>
    <trimStackTrace>false</trimStackTrace>

    <!-- com.github.github:site-maven-plugin -->
    <github.global.server>github</github.global.server>

  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
          <groupId>com.sun.activation</groupId>
          <artifactId>javax.activation</artifactId>
          <version>${version.javax.activation}</version>
      </dependency>

      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${version.com.sun.xml.bind}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${version.com.sun.xml.bind}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${version.com.sun.xml.bind}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.junit}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>${version.org.apache.maven}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-plugin-api</artifactId>
        <version>${version.org.apache.maven}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-model</artifactId>
        <version>${version.org.apache.maven}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-project</artifactId>
        <version>${version.org.apache.maven.maven-project}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${version.org.apache.maven.plugin-tools}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>maven-artifact-transfer</artifactId>
        <version>${version.org.apache.maven.shared.maven-artifact-transfer}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.maven.shared</groupId>
        <artifactId>file-management</artifactId>
        <version>${version.org.apache.maven.shared.file-management}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-utils</artifactId>
        <version>${version.org.codehaus.plexus.plexus-utils}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${version.org.freemarker}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${version.org.slf4j}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>com.sun.activation</groupId>
      <artifactId>javax.activation</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <scope>provided</scope>
      <exclusions>

        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-cli</groupId>
          <artifactId>commons-cli</artifactId>
        </exclusion>

      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-artifact-transfer</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>file-management</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Ordering: alphabetical by groupId and artifactId -->

        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>${version.com.github.github.site-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.com.mycila.license-maven-plugin}</version>
          <configuration>
            <inlineHeader>Copyright (c) ${project.inceptionYear} Repackage Tests Maven Plugin
project contributors as indicated by the @author tags.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.</inlineHeader>
            <excludes>
              <exclude>**/*.adoc</exclude>
              <exclude>**/*.expected.*</exclude>
              <exclude>**/create-test-modules-templates/*</exclude>
              <exclude>**/README.*</exclude>
              <exclude>**/.gitkeep</exclude>
              <exclude>.gitattributes/</exclude>
              <exclude>.mvn/wrapper/</exclude>
              <exclude>LICENSE</exclude>
              <exclude>mvnw</exclude>
              <exclude>mvnw.cmd</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>${version.formatter-maven-plugin}</version>
        </plugin>
        <plugin>
          <groupId>net.revelc.code</groupId>
          <artifactId>impsort-maven-plugin</artifactId>
          <version>${version.impsort-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${version.maven-clean-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven-compiler-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.maven-deploy-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.maven-enforcer-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${version.maven-gpg-plugin}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${version.maven-install-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${version.maven-invoker-plugin}</version>
          <configuration>
            <scriptVariables>
              <projectVersion>${project.version}</projectVersion>
            </scriptVariables>
            <environmentVariables>
              <MAVEN_OPTS>-Duser.country=US -Duser.language=en</MAVEN_OPTS>
            </environmentVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.maven-jar-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${version.maven-javadoc-plugin}</version>
          <configuration>
            <detectJavaApiLink>false</detectJavaApiLink>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${version.maven-plugin-plugin}</version>
          <configuration>
            <goalPrefix>rpkgtests</goalPrefix>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${version.maven-project-info-reports-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${version.maven-release-plugin}</version>
          <configuration>
            <tagNameFormat>@{project.version}</tagNameFormat>
            <preparationGoals>package</preparationGoals>
            <goals>deploy site</goals>
            <releaseProfiles>release</releaseProfiles>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.maven-resources-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>${version.maven-scm-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${version.maven-site-plugin}</version>
          <configuration>
            <asciidoc>
              <attributes>
                <icons>font</icons>
                <source-highlighter>coderay</source-highlighter>
                <coderay-css>style</coderay-css>
                <toclevels>2</toclevels>
                <project-version>${project.version}</project-version>
                <project-prerequisites-maven>${project.prerequisites.maven}</project-prerequisites-maven>
                <maven-compiler-target>${maven.compiler.target}</maven-compiler-target>
              </attributes>
            </asciidoc>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.maven-source-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.maven-surefire-plugin}</version>
          <configuration>
            <systemPropertyVariables>
              <basedir>${project.build.directory}</basedir>
              <project.version>${project.version}</project.version>
              <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
              <org.slf4j.simpleLogger.showDateTime>true</org.slf4j.simpleLogger.showDateTime>
            </systemPropertyVariables>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${version.org.codehaus.buildnumber-maven-plugin}</version>
          <configuration>
            <locale>en_US</locale>
            <timestampFormat>{0,date,yyyy-MM-dd'T'HH:mm:ssX}</timestampFormat>
          </configuration>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>mrm-maven-plugin</artifactId>
          <version>${version.mrm-maven-plugin}</version>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${version.nexus-staging-maven-plugin}</version>
          <configuration>
              <nexusUrl>${oss.nexus.base.url}</nexusUrl>
              <!-- The server "id" element from settings.xml to use authentication from -->
              <serverId>ossrh</serverId>
              <autoDropAfterRelease>false</autoDropAfterRelease>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <configuration>
          <configFile>eclipse-format.xml</configFile>
          <skip>${format.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <id>format-java</id>
            <goals>
              <goal>format</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.ec4j.core</groupId>
            <artifactId>ec4j-core-build</artifactId>
            <version>${version.org.ec4j.core}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>net.revelc.code</groupId>
        <artifactId>impsort-maven-plugin</artifactId>
        <configuration>
          <groups>java.,javax.</groups>
          <skip>${format.skip}</skip>
          <removeUnused>true</removeUnused>
        </configuration>
        <executions>
          <execution>
            <id>sort-imports</id>
            <goals>
              <goal>sort</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>install</goal>
              <goal>run</goal>
            </goals>
            <configuration>
              <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
              <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
              <settingsFile>${project.build.directory}/settings-mrm.xml</settingsFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>


      <!-- To speed up the tests, we use the mrm-maven-plugin to proxy the local Maven repo of the main build so that
           the test child build does not have to download all the dependencies from the Central. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>mrm-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>mrm-start</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>mrm-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-settings-mrm</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <skip>false</skip>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <include>settings-mrm.xml</include>
                  <filtering>true</filtering> <!-- to eval ${mrm.repository.url} set by mrm-maven-plugin -->
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <profile>
      <id>release</id>

      <properties>
        <!-- This makes the buildnumber-maven-plugin fail in case of uncommitted local changes -->
        <maven.buildNumber.doCheck>true</maven.buildNumber.doCheck>
      </properties>

      <build>
        <plugins>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>

    </profile>
  </profiles>

</project>
