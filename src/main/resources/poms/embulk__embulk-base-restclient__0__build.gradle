plugins {
    id "java"
    id "java-library"
    id "maven-publish"
    id "signing"
    id "checkstyle"
    id "org.embulk.embulk-plugins" version "0.4.2" apply false
}

group = "org.embulk"
version = "0.10.0-SNAPSHOT"
description = "Alternative base classes for Embulk plugins to access RESTful services"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    compileClasspath.resolutionStrategy.activateDependencyLocking()
    runtimeClasspath.resolutionStrategy.activateDependencyLocking()
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly("org.embulk:embulk-api:0.10.18")
    compileOnly("org.embulk:embulk-spi:0.10.18")

    // They are "api" dependencies because they are used in method signatures of embulk-base-restclient.
    api "org.embulk:embulk-util-config:0.1.3"
    api "org.embulk:embulk-util-json:0.1.0"
    api "org.embulk:embulk-util-timestamp:0.2.1"
    api "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    api "com.fasterxml.jackson.core:jackson-core:2.6.7"
    api "com.fasterxml.jackson.core:jackson-databind:2.6.7"

    testImplementation "junit:junit:4.13"
    testImplementation "org.embulk:embulk-api:0.10.18"
    testImplementation "org.embulk:embulk-core:0.10.18"
    testImplementation "org.embulk:embulk-core:0.10.18:tests"
    testImplementation "org.embulk:embulk-deps:0.10.18"
    testImplementation "org.embulk:embulk-util-retryhelper-jaxrs:0.8.0"

    // RESTEasy JAX-RS implementation is required only for testing.
    testImplementation "org.jboss.resteasy:resteasy-client:3.0.19.Final"
}

// TODO(dmikurube): Replace these tests with embulk-input-example.
sourceSets {
   test {
        java {
            srcDir "src/test/java"
            exclude "org/embulk/input/shopify/Test*.java"
       }
   }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = "UTF-8"
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    title = "${project.name} v${project.version}"

    options {
        locale = "en_US"
        encoding = "UTF-8"
        overview = "src/main/html/overview.html"
        links "https://docs.oracle.com/javase/8/docs/api/"
    }
}

jar {
    from rootProject.file("LICENSE")
}

sourcesJar {
    from rootProject.file("LICENSE")
}

javadocJar {
    from rootProject.file("LICENSE")
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        // Not to skip up-to-date checkstyles.
        outputs.upToDateWhen { false }
    }
}

checkstyle {
    toolVersion "8.7"
    configFile = file("${projectDir}/config/checkstyle/checkstyle.xml")
    configProperties = [
        "checkstyle.config.path": file("${projectDir}/config/checkstyle")
    ]
    ignoreFailures = false
    maxWarnings = 0  // https://github.com/gradle/gradle/issues/881
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"

            from components.java
            // javadocJar and sourcesJar are added by java.withJavadocJar() and java.withSourcesJar() above.
            // See: https://docs.gradle.org/current/javadoc/org/gradle/api/plugins/JavaPluginExtension.html

            pom {  // https://central.sonatype.org/pages/requirements.html
                packaging "jar"

                name = "${project.name}"
                description = "${project.description}"
                url = "https://www.embulk.org/"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }

                developers {
                    developer {
                        name = "Muga Nishizawa"
                        email = "muga.nishizawa@gmail.com"
                    }
                    developer {
                        name = "Dai MIKURUBE"
                        email = "dmikurube@treasure-data.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/embulk/embulk-base-restclient.git"
                    developerConnection = "scm:git:git@github.com:embulk/embulk-base-restclient.git"
                    url = "https://github.com/embulk/embulk-base-restclient"
                }
            }
        }
    }

    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
