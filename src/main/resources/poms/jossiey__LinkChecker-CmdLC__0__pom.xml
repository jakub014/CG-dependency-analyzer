<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.jossiey</groupId>
	<artifactId>LinkChecker-CmdLC</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<name>LinkChecker-CmdLC</name>
	<description>A command-line tool checking broken URLs</description>
	<url>https://github.com/jossiey/LinkChecker-CmdLC</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Jossie Yang</name>
			<email>jyang223@myseneca.ca</email>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/jossiey/LinkChecker-CmdLC.git</connection>
		<developerConnection>scm:git:ssh://github.com:jossiey/LinkChecker-CmdLC.git</developerConnection>
		<url>http://github.com/jossiey/LinkChecker-CmdLC</url>
	</scm>


	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>4.5.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.7.3</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-core -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>1.7.3</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-reflect -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-reflect</artifactId>
			<version>2.0.7</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4 -->
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>2.0.9</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>


	</dependencies>

	<build>
	<plugins>
				<!-- configure the Javadoc and Source attachments Maven plugins -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- The Maven GPG plugin is used to sign the components with the following 
					configuration -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.5</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				</plugins>
		<pluginManagement>
			<plugins>
				<!-- Nexus Staging Maven plugin -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.7</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>


			
				<!-- spotBugs plugin -->
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>4.0.0</version>
					<configuration>
						<xmlOutput>true</xmlOutput>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>



				<!--Jacoco: generate test coverage report -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.6</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<!-- attached to Maven test phase -->
						<execution>
							<id>report</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->

								<dataFile>target/jacoco.exec</dataFile>
								<!-- Sets the output directory for the code coverage report. -->
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
