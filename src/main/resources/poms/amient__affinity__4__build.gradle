group = parent.group
version = parent.version

apply plugin: 'scala'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: 'maven-publish'

ext {
    artefact='core-scala_' + rootProject.baseScalaVersion
    avroArtefact='avro-scala_' + rootProject.baseScalaVersion
}
if (rootProject.hasProperty('maven-central')) {
    uploadArchives.repositories.mavenDeployer.pom.artifactId = artefact
}
publishing {
    publications {
        maven(MavenPublication) {
            artifactId artefact
            from components.java
        }
    }
}
install.repositories.mavenInstaller.pom.artifactId = artefact
def installer = install.repositories.mavenInstaller
[installer]*.pom*.whenConfigured { pom ->
    pom.dependencies.find {dep -> dep.groupId == 'io.amient.affinity' && dep.artifactId == 'avro' }.artifactId = avroArtefact
}

dependencies {

    compile project(':api')
    compile project(':avro')
    compile group: 'com.101tec', name: 'zkclient', version: zkClientVersion
    compile group: 'com.typesafe.akka', name: 'akka-actor_' + baseScalaVersion, version: akkaVersion
    compile group: 'com.typesafe.akka', name: 'akka-stream_' + baseScalaVersion, version: akkaVersion
    compile group: 'com.typesafe.akka', name: 'akka-remote_' + baseScalaVersion, version: akkaVersion
    compile group: 'com.typesafe.akka', name: 'akka-http-core_' + baseScalaVersion, version: akkaHttpVersion
    compile group: 'com.typesafe.akka', name: 'akka-slf4j_' + baseScalaVersion, version: akkaVersion

    testCompile project(':kafka:storage-kafka')
    testCompile project(':kafka:test-util-kafka')
    testCompile project(':ws-client')

}

