group 'io.redskap'
version '2.3.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

subprojects {
    group = rootProject.group
    version = rootProject.version

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'

    sourceCompatibility = 1.8

    dependencies {
        compileOnly "org.projectlombok:lombok:1.18.2"

        compile "org.springframework:spring-context:5.1.1.RELEASE"
        compile "com.google.code.findbugs:findbugs-annotations:3.0.1"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1"

        testCompile "junit:junit:4.12"
        testCompile "org.assertj:assertj-core:3.11.1"
        testCompile "org.springframework:spring-test:5.1.1.RELEASE"
        testCompile "org.mockito:mockito-core:2.23.0"
    }

    checkstyle {
        toolVersion = '8.14'
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

    //<editor-fold desc="Uploading to central">
    apply plugin: 'signing'

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (project.hasProperty('signing.keyId')) {
        signing {
            sign configurations.archives
        }
    }

    if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                    }

                    pom.project {
                        name 'Swagger Brake'
                        packaging 'jar'
                        description 'Swagger contract checker for breaking API changes'
                        url 'https://github.com/redskap/swagger-brake'

                        scm {
                            connection 'scm:git:git://github.com/redskap/swagger-brake.git'
                            developerConnection 'scm:git:ssh://github.com:redskap/swagger-brake.git'
                            url 'https://github.com/redskap/swagger-brake'
                        }

                        licenses {
                            license {
                                name 'The Apache License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }

                        developers {
                            developer {
                                id 'galovics'
                                name 'Arnold Galovics'
                                email 'info@arnoldgalovics.com'
                            }
                        }
                    }
                }
            }
        }
    }
    //</editor-fold>
}

