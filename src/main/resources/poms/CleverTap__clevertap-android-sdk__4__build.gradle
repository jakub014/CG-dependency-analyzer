ext {
    libraryName = 'GeofenceSDK'
    artifact = 'clevertap-geofence-sdk'
    libraryDescription = 'The CleverTap Android Geofence SDK'

    libraryVersion = "$geofenceVersion"

    licenseName = 'MIT License'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

apply from: "../gradle-scripts/commons.gradle"

dependencies {
    compileOnly project(':clevertap-core')
    compileOnly deps.playServicesLocation
    compileOnly deps.workManager
    compileOnly deps.androidXConcurrentFutures

    // Unit testing dependencies
    testImplementation deps.junitPlatform
    testImplementation deps.junitApi
    testRuntimeOnly deps.junitEngine

    testImplementation deps.mockitoCore
    testImplementation deps.robolectric

    testImplementation deps.androidXTestCore
    testImplementation deps.androidXJunitExt
    testImplementation deps.appcompat

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation deps.androidXTestRunner
    androidTestImplementation deps.androidXTestRules
    androidTestImplementation deps.espressoCore

    testImplementation 'org.powermock:powermock-core:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.6'
    testImplementation 'eu.codearte.catch-exception:catch-exception:2.0'
    testImplementation project(':clevertap-core')

    testImplementation deps.installreferrer
    testImplementation deps.playServicesLocation
    testImplementation deps.jsonAssert
    testImplementation deps.workManagerTesting
    testImplementation 'org.awaitility:awaitility:4.0.3'
    testImplementation deps.androidXConcurrentFutures
    testImplementation deps.androidXCoreKTX
    testImplementation deps.kotlinStdlib
}