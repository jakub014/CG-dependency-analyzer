apply plugin: 'org.jetbrains.kotlin.multiplatform'

def ideaActive = System.getProperty("idea.active") == "true"

kotlin {
  if (ideaActive) {
    macosX64("native")
//    macosX64("nativeDarwin") // Uncomment to get IDE recognition for darwin code until HMPP fixed
    mingwX64("mingw")
  } else {
    macosX64()
    iosArm32()
    iosArm64()
    iosX64()
    watchosArm32()
    watchosArm64()
    watchosX86()
    watchosX64()
    tvosArm64()
    tvosX64()
    mingwX64()
  }

  sourceSets {
    commonMain {
      dependencies {
        api project (':runtime')
      }
    }
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.testhelp
      }
    }
    nativeMain {
      dependencies {
        api deps.sqliter
        implementation deps.stately.core
      }
    }
    nativeTest {
      dependencies {
        implementation project(':drivers:driver-test')
      }
    }
    nativeDarwinMain{
      dependsOn(nativeMain)
    }
    mingwMain{
      dependsOn(nativeMain)
    }
  }

  if (!ideaActive) {
    configure([targets.iosX64, targets.iosArm32, targets.iosArm64, targets.tvosX64, targets.tvosArm64, targets.watchosX86, targets.watchosX64, targets.watchosArm32, targets.watchosArm64, targets.macosX64]) {
      compilations.main.source(sourceSets.nativeDarwinMain)
      compilations.test.source(sourceSets.nativeTest)
      compilations.test {
        kotlinOptions.freeCompilerArgs += ["-linker-options", "-lsqlite3"]
      }
    }
    configure([targets.mingwX64]) {
      compilations.main.source(sourceSets.mingwMain)
      compilations.test.source(sourceSets.nativeTest)
      compilations.test {
        kotlinOptions.freeCompilerArgs += ["-linker-options", "-Lc:\\msys64\\mingw64\\lib"]
        kotlinOptions.freeCompilerArgs += ["-linker-options", "-L$projectDir\\libs".toString()]
        kotlinOptions.freeCompilerArgs += ["-linker-options", "-lsqlite3"]
      }
    }
  }
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"
