dependencies {
	compile project(":JAICore:jaicore-basic")
	compile project(":JAICore:jaicore-experiments")
	compile project(":JAICore:jaicore-search")
	compile project(":JAICore:jaicore-processes")
	compile project(":JAICore:jaicore-math")
	compile project(":JAICore:jaicore-components")
	testCompile project(path: ':JAICore:jaicore-basic', configuration: 'testArtifacts')
	
	compile ("$api4AIml")
	
	compile ("$apacheCommonsCollections")
	compile ("$openmlAPIConnector")
	
	// linear algebra; used for time series modeling and dyad ranking
  	compile "org.nd4j:nd4j-native-platform:1.0.0-beta3"
    compile "org.deeplearning4j:deeplearning4j-core:1.0.0-beta3"
    
    //optimization algorithms; used for optimization in dyad ranking
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.9.2'
	
	//JTwig template engine; used for the scikit-learn wrapper
	compile "org.jtwig:jtwig-core:5.87.0.RELEASE"
	
	// used for the web-client to address a learning curve prediction server
	compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
}

configurations.all {
    exclude module: 'weka-dev'
    exclude module: 'interruptible-weka'
    exclude module: 'weka'
}

task testOpenMLAdapter(type: Test) {
	useJUnitPlatform{
		filter {
			includeTestsMatching "ai.libs.jaicore.ml.core.dataset.serialization.OpenMLDatasetAdapterTest"
		}
	}
}

task testSampling(type: Test) {
	useJUnitPlatform{
		filter {
			includeTestsMatching "ai.libs.jaicore.ml.core.filter.sampling.*"
		}
	}
}

task testOthers(type: Test) {
	useJUnitPlatform{
		filter {
			excludeTestsMatching "ai.libs.jaicore.ml.core.dataset.serialization.OpenMLDatasetAdapterTest"
			excludeTestsMatching "ai.libs.jaicore.ml.core.filter.sampling.*"
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        		authentication(userName: "${ossrhUsername}", password: "${ossrhPassword}")
      		}	
      		snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        		authentication(userName: "${ossrhUsername}", password: "${ossrhPassword}")
      		}

      		pom.project {
        		name 'JAICore-ML'
        		packaging 'jar'
        		// optionally artifactId can be defined here 
        		description 'This project provides utils to deal with machine learning tasks. Especially it gives support to work with standard ML libraries in Java.'
        		url 'https://libs.ai'

        		scm {
          			connection 'scm:git:https://github.com/fmohr/AILibs.git'
          			developerConnection 'scm:git:https://github.com/fmohr/AILibs.git'
          			url 'https://github.com/fmohr/AILibs'
        		}

        		licenses {
          			license {
            			name 'GPLv3'
            			url 'https://www.gnu.org/licenses/gpl-3.0.en.html'
          			}
        		}

        		developers {
          			developer {
            			id 'fmohr'
            			name 'Felix Mohr'
            			email 'felix.mohr@upb.de'
          			}
          			developer {
          				id 'mwever'    
          			    name 'Marcel Wever'
          			    email 'marcel.wever@upb.de'
          			}
          			developer {
          			    id 'ahetzer'
          			    name 'Alexander Hetzer'
          			    email 'alexander.hetzer@upb.de'
          			}
        		}
      		}
    	}
  	}
}
