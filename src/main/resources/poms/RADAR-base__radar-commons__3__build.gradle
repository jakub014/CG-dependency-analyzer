/*
 * Copyright 2017 The Hyve and King's College London
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.commercehub.gradle.plugin.avro'

description = 'RADAR Common server library utilities.'

targetCompatibility = '11.0'
sourceCompatibility = '11.0'

repositories {
    maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

dependencies {
    api project(':radar-commons')

    // For POJO classes and ConfigLoader
    implementation group: 'com.fasterxml.jackson.core' , name: 'jackson-databind' , version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonYamlVersion

    api group: 'org.apache.avro', name: 'avro', version: avroVersion

    implementation group: 'com.fasterxml.jackson.core' , name: 'jackson-databind' , version: jacksonVersion
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion

    testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    // Direct producer uses KafkaAvroSerializer if initialized
    testImplementation group: 'io.confluent', name: 'kafka-avro-serializer', version: confluentVersion
    testImplementation group: 'org.radarbase', name: 'radar-schemas-commons', version: radarSchemasVersion
    // Direct producer uses KafkaAvroSerializer if initialized
    testImplementation group: 'junit', name: 'junit', version: junitVersion
    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion
}

apply from: '../gradle/publishing.gradle'
apply from: '../gradle/codestyle.gradle'

tasks.withType(Checkstyle) {
    exclude '**/org/radarbase/stream/collector/*State.*'
}

tasks.withType(Pmd) {
    exclude '**/org/radarbase/stream/collector/*State.*'
}
