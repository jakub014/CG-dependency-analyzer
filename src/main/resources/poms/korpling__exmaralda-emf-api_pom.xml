<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.corpus-tools</groupId>
	<artifactId>exmaralda-emf-api</artifactId>
	<version>1.2.2</version>
	<packaging>bundle</packaging>
	<url>https://github.com/korpling/exmaralda-emf-api</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/korpling/exmaralda-emf-api/issues</url>
	</issueManagement>
	<developers>
		<developer>
			<name>Florian Zipser</name>
			<email>saltnpepper@lists.hu-berlin.de</email>
			<organization>Humboldt-Universit√§t zu Berlin</organization>
			<organizationUrl>https://www.hu-berlin.de</organizationUrl>
		</developer>
	</developers>
	<description>This project provides an EMF (see: http://www.eclipse.org/modeling/emf/) meta model of the EXMARaLDA (see: http://www.exmaralda.org/) data format (.exb). Further a Java api is included to access, manipulate read and store such data.</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<component.descriptor.name>serviceComponents.xml</component.descriptor.name>
		<bundle.file>${project.groupId}.${project.artifactId}_${project.version}.jar</bundle.file>
		<assemblies.name>src/assemble/assemblies.xml</assemblies.name>
		<license.file>${basedir}/LICENSE</license.file>
		<notice.file>${basedir}/NOTICE</notice.file>
		<emf.version>2.9.1-v20130827-0309</emf.version>
		<maven-scm-publish-plugin.version>1.1</maven-scm-publish-plugin.version>
		<exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
		<maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-javadoc-plugin.version>2.10.1</maven-javadoc-plugin.version>
	</properties>
	<scm>
		<connection>scm:git:git://github.com/github.com:korpling/exmaralda-emf-api.git</connection>
		<developerConnection>scm:git:git@github.com:korpling/exmaralda-emf-api.git</developerConnection>
		<url>https://github.com/korpling/exmaralda-emf-api</url>
		<tag>HEAD</tag>
	</scm>
	<repositories>
		<repository>
			<id>korpling</id>
			<name>korpling maven repo</name>
			<url>http://korpling.german.hu-berlin.de/maven2</url>
		</repository>
	</repositories>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.common</artifactId>
			<version>${emf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore</artifactId>
			<version>${emf.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.emf</groupId>
			<artifactId>org.eclipse.emf.ecore.xmi</artifactId>
			<version>${emf.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- start: assembly plugin -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<descriptors>
						<descriptor>${assemblies.name}</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
					<finalName>${project.groupId}.${project.artifactId}_${project.version}</finalName>
					<outputDirectory>target/distribution</outputDirectory>
					<workDirectory>target/assembly/work</workDirectory>
				</configuration>
			</plugin>
			<!-- end: assembly plugin -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<filesets>
						<fileset>
							<directory>META-INF</directory>
							<directory>OSGI-INF</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- start: for generating license headers in source files. Run mvn license:format -->
			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<header>${basedir}/src/etc/header.txt</header>
					<includes>
						<include>src/main/java/**</include>
						<include>src/test/java/**</include>
					</includes>
				</configuration>
			</plugin>
			<!-- end: for generating license headers in source files. Run mvn license:format -->
			<!-- start: creates a NOTICE file use mvn notice:generate -->
			<plugin>
				<groupId>org.jasig.maven</groupId>
				<artifactId>maven-notice-plugin</artifactId>
				<version>1.0.4</version>
				<configuration>
					<noticeTemplate>./src/etc/NOTICE_template.txt</noticeTemplate>
				</configuration>
			</plugin>
			<!-- end: creates a NOTICE file use mvn notice:generate -->
			<!-- start: creation of bundle jar -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.1.0</version>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>${basedir}/META-INF</manifestLocation>
					<source>1.7</source>
					<target>1.7</target>
					<instructions>
						<Bundle-Name>${project.artifactId}</Bundle-Name>
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId};singleton:=true</Bundle-SymbolicName>
						<Bundle-Version>${project.version}</Bundle-Version>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6</Bundle-RequiredExecutionEnvironment>
						<Export-Package>de.hu_berlin.german.korpling.saltnpepper.misc.exmaralda;
							de.hu_berlin.german.korpling.saltnpepper.misc.exmaralda.exceptions;
							de.hu_berlin.german.korpling.saltnpepper.misc.exmaralda.resources</Export-Package>
						<Include-Resource>{maven-resources}, LICENSE, NOTICE</Include-Resource>
					</instructions>
				</configuration>
			</plugin>
			<!-- start: Plugin for automatic releasing -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>perform</goal>
						</goals>
						<configuration>
							<pomFileName>exmaralda-emf-api/pom.xml</pomFileName>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<releaseProfiles>release</releaseProfiles>
					<goals>package assembly:single deploy</goals>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>1.14.0</version>
				<configuration>
					<pushRemote>true</pushRemote>
					<preReleaseGoals>license:format notice:generate</preReleaseGoals>
					<postReleaseGoals>-Prelease,doxygen package assembly:single deploy</postReleaseGoals>
					<postHotfixGoals>-Prelease,doxygen package assembly:single deploy</postHotfixGoals>
					<verbose>true</verbose>
					<gitFlowConfig>
						<productionBranch>master</productionBranch>
						<developmentBranch>develop</developmentBranch>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<supportBranchPrefix>support/</supportBranchPrefix>
						<versionTagPrefix>pepper-</versionTagPrefix>
						<origin>origin</origin>
					</gitFlowConfig>
				</configuration>
			</plugin>
		</plugins>

		<finalName>${project.groupId}.${project.artifactId}_${project.version}</finalName>
	</build>
	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- generate a jar for sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven-source-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Generates a Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
					<!-- The Maven GPG plugin is used to sign the components -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<name>${project.groupId}.${project.artifactId}</name>
</project>
