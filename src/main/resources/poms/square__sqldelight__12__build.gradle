apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
  sourceSets {
    commonTest {
      dependencies {
        implementation deps.kotlin.test.common
        implementation deps.kotlin.test.commonAnnotations
      }
    }
    jvmTest {
      dependencies {
        implementation deps.kotlin.test.junit
        implementation deps.stately.collections
      }
    }
    jsTest {
      dependencies {
        implementation deps.kotlin.test.js
      }
    }
    nativeMain {
      dependencies {
        implementation deps.stately.core
        implementation deps.stately.collections
      }
    }
    nativeTest{}
  }

  js {
    nodejs {}
    browser {}
    compilations.all {
      kotlinOptions {
        moduleKind = "umd"
        sourceMap = true
        sourceMapEmbedSources = null
      }
    }
  }

  targetFromPreset(presets.jvm, 'jvm')
  targetFromPreset(presets.iosX64, 'iosX64')
  targetFromPreset(presets.iosArm32, 'iosArm32')
  targetFromPreset(presets.iosArm64, 'iosArm64')
  targetFromPreset(presets.tvosX64, 'tvosX64')
  targetFromPreset(presets.tvosArm64, 'tvosArm64')
  targetFromPreset(presets.watchosX86, 'watchosX86')
  targetFromPreset(presets.watchosX64, 'watchosX64')
  targetFromPreset(presets.watchosArm32, 'watchosArm32')
  targetFromPreset(presets.watchosArm64, 'watchosArm64')
  targetFromPreset(presets.macosX64, 'macosX64')
  targetFromPreset(presets.mingwX64, 'mingw')

  configure([targets.iosX64, targets.iosArm32, targets.iosArm64, targets.tvosX64, targets.tvosArm64, targets.watchosX86, targets.watchosX64, targets.watchosArm32, targets.watchosArm64, targets.macosX64, targets.mingw]) {
    compilations.main.source(sourceSets.nativeMain)
    compilations.test.source(sourceSets.nativeTest)
  }
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"