<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <!-- This Parent POM combines Continuous Integration and Java -->
	<groupId>de.davelee</groupId>
	<artifactId>ci-parent-pom</artifactId>
	<version>2.0.3-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<name>Parent POM for Continuous Integration with Java</name>
	<description>This is a Maven Parent POM for Continuous Integration using Java. It has an analysis profile that can be called which runs Surefire for JUnit Tests, measures Code Coverage using JaCoCo (v2.0.x and higher) or Cobertura (v1.0.x), generates Documentation using JavaDoc and measures Code Quality using PMD, FindBugs and Checkstyle.</description>
	<url>https://www.davelee.de</url>
	<developers>
		<developer>
			<id>1</id>
			<name>David A J Lee</name>
			<url>https://www.davelee.de</url>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU General Public Licence</name>
			<url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	
	<!-- Git Connection -->
	<scm>
        <connection>scm:git:https://github.com/daveajlee/ci-parent-pom</connection>
        <url>https://github.com/daveajlee/ci-parent-pom</url>
      <tag>HEAD</tag>
  	</scm>
  	
  	<!-- GitHub Packages -->
  	<distributionManagement>
   		<repository>
     		<id>github</id>
     		<name>GitHub daveajlee Apache Maven Packages</name>
     		<url>https://maven.pkg.github.com/daveajlee/ci-parent-pom</url>
   		</repository>
	</distributionManagement>
    
    <!-- Define variables to enable quick changes including java version -->
    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>13</java.version>
        <junit.version>5.5.2</junit.version>
        <slf4j.version>1.7.30</slf4j.version>
		<log4j.version>2.13.3</log4j.version>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <jacoco.version>0.8.5</jacoco.version>
        <surefire.version>2.22.2</surefire.version>
        <pmd.version>3.12.0</pmd.version>
        <findbugs.version>3.0.5</findbugs.version>
        <checkstyle.version>3.1.0</checkstyle.version>
    </properties>

	<dependencies>
		<!-- Include the junit plugin since projects must have tests! -->
		<dependency>
    		<groupId>org.junit.jupiter</groupId>
    		<artifactId>junit-jupiter-engine</artifactId>
    		<version>${junit.version}</version>
    		<scope>test</scope>
		</dependency>
        
        <!-- Include Log4j2 as standard logging dependency using SLF4J -->
        <!-- Logging Frameworks -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
                <!-- Ensure that we always compile projects in Java 8 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
    
    <profiles>
		<profile>
            <!-- The analysis profile runs the following features: JUnit Tests with Surefire, Coberatura Code Coverage, -->
			<id>analysis</id>
			<build>
				<plugins>
                    <!-- JUnit Tests with Surefire -->
                    <plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${surefire.version}</version>
					</plugin>
                    <!-- Measure Code Coverage with JaCoCo -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Generate Documentation by publishing JavaDoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>aggregate</id>
								<phase>install</phase>
								<goals>
									<goal>aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
                    <!-- Measure Code Quality with PMD -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${pmd.version}</version>
						<executions>
							<execution>
								<id>install</id>
								<phase>install</phase>
								<goals>
									<goal>pmd</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
                    <!-- Measure Code Quality with Find Bugs -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${findbugs.version}</version>
						<configuration>
							<xmlOutput>true</xmlOutput>
						</configuration>
						<executions>
							<execution>
								<id>install</id>
								<phase>install</phase>
								<goals>
									<goal>findbugs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${checkstyle.version}</version>
						<executions>
							<execution>
								<id>install</id>
								<phase>install</phase>
								<goals>
									<goal>checkstyle</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>