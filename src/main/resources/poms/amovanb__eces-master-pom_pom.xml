<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.tum.ei.lkn.eces</groupId>
    <artifactId>pre-master-pom</artifactId>
    <version>1.0.21</version>
    <packaging>pom</packaging>  <!-- To be able to set as parent pom -->

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Project with common configs from which all projects using the ECES framework should inherit. The ECES framework is implemented in the de.tum.ei.lkn.eces.core artifact.</description>
    <url>https://github.com/AmoVanB/eces-master-pom</url>

    <scm>
        <connection>scm:git:git://github.com/amovanb/eces-master-pom.git</connection>
        <developerConnection>scm:git:ssh://github.com:amovanb/eces-master-pom.git</developerConnection>
        <url>http://github.com/amovanb/eces-master-pom/tree/master</url>
    </scm>

    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Amaury Van Bemten</name>
            <email>amaury.van-bemten@tum.de</email>
            <organization>Technical University of Munich - Chair of Communication Networks</organization>
            <organizationUrl>https://www.ei.tum.de/en/lkn/home/</organizationUrl>
        </developer>
        <developer>
            <name>Jochen Guck</name>
            <email>guck@tum.de</email>
            <organization>Technical University of Munich - Chair of Communication Networks</organization>
            <organizationUrl>https://www.ei.tum.de/en/lkn/home/</organizationUrl>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <modules>
        <!-- DIRECTORY names of the submodules -->
	    <module>master-pom-commons</module>
        <module>master-pom</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <!-- Use Java 8 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <!-- Jar creation plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- deploy to the OSSRH Nexus Repository Manager
                     and release to the Maven Central Repository
                     with the Nexus Staging Maven plugin -->
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <!-- Generates the Version.java class for each artifact.
                     This file will automatically define static strings
                     containing the group id, artifact id and version of
                     the module. -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>templating-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>generate-version-class</id>
                        <goals>
                            <goal>filter-sources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Plugin for maven to handle the gitflow procedures -->
                <groupId>io.ultreia.java4all.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <version>1.0.0-rc-1</version>
                <configuration>
                    <!-- Automatically update the versions of the submodules
                         of the pre-master-pom. -->
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <allowUntracked>true</allowUntracked>
                    <pushFeatures>true</pushFeatures>
                    <pushHotfixes>true</pushHotfixes>
                    <pushReleases>true</pushReleases>
                    <!-- The plugin should not deploy. This is done by
                         Github CI. -->
                    <noDeploy>true</noDeploy>
                    <flowInitContext>
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>develop</developBranchName>
                        <featureBranchPrefix>feature-</featureBranchPrefix>
                        <releaseBranchPrefix>release-</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix-</hotfixBranchPrefix>
                        <versionTagPrefix>${project.artifactId}-
                        </versionTagPrefix>
                    </flowInitContext>
                </configuration>
            </plugin>
            <plugin>
                <!-- Surefire plugin for tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.20</version>
                <configuration>
                    <!-- see: https://stackoverflow.com/questions/53010200/maven-surefire-could-not-find-forkedbooter-class -->
                    <argLine>-Djdk.net.URLClassPath.disableClassPathURLCheck=true</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Generate Javadoc/Source jar files and sign the components
                 with a GPG key to fulfill the requirements to push to the
                 Central Repository. -->
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9.1</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                                <configuration>
                                    <!-- Prevent `gpg` from using pinentry programs -->
                                    <gpgArguments>
                                        <arg>--pinentry-mode</arg>
                                        <arg>loopback</arg>
                                    </gpgArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- Configuration framework-->
        <dependency>
            <groupId>org.aeonbits.owner</groupId>
            <artifactId>owner</artifactId>
            <version>1.0.10</version>
        </dependency>
        <!-- Logging framework -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- Testing framework -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
