<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.sunbird</groupId>
    <artifactId>cloud-store-sdk</artifactId>
    <version>1.2.8</version>
    <packaging>jar</packaging>
    <name>Cloud Store SDK</name>
    <description>cloud-store-sdk provides client APIs to handle cloud store (AWS S3, Azure Blobstore).</description>
    <url>https://www.sunbird.org/</url>
    <properties>
    	<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scoverage.plugin.version>1.1.1</scoverage.plugin.version>
		<scala.maj.version>2.11</scala.maj.version>
		<scala.version>2.11.8</scala.version>
    </properties>
    <licenses>
		<license>
    		<name>MIT License</name>
    		<url>http://www.opensource.org/licenses/mit-license.php</url>
  		</license>
	</licenses>
	<developers>
    <developer>
		<name>Sunbird</name>
		<email>info@sunbird.org</email>
		<organization>Sunbird</organization>
		<organizationUrl>https://www.sunbird.org/</organizationUrl>
    </developer>
  </developers>
    <distributionManagement>
  		<snapshotRepository>
    		<id>ossrh</id>
    		<url>https://oss.sonatype.org/content/repositories/snapshots</url>
  		</snapshotRepository>
  		<repository>
    		<id>ossrh</id>
    		<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
  		</repository>
	</distributionManagement>
	<scm>
    	<connection>scm:git:git://github.com/project-sunbird/sunbird-cloud-storage-sdk.git</connection>
    	<developerConnection>scm:git:ssh://github.com/project-sunbird/sunbird-cloud-storage-sdk.git</developerConnection>
    	<url>https://github.com/project-sunbird/sunbird-cloud-storage-sdk/tree/master</url>
   </scm>
    <dependencies>
    	<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-all</artifactId>
			<version>2.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-storage</artifactId>
            <version>5.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-azure</artifactId>
            <version>2.7.3</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.8.1</version>
        </dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.maj.version}</artifactId>
			<version>2.2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.7.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-scala_${scala.maj.version}</artifactId>
			<version>2.7.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.18</version>
		</dependency>
	</dependencies>
    <build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<args>
								<arg>-dependencyfile</arg>
								<arg>${project.build.directory}/.scala_dependencies</arg>
							</args>
						</configuration>
					</execution>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>doc-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<aggregate>true</aggregate>
					<highlighting>true</highlighting>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
		      	<executions>
		        	<execution>
		          		<id>attach-sources</id>
		          		<goals>
		            		<goal>jar-no-fork</goal>
		          		</goals>
		        	</execution>
		      </executions>
		    </plugin>
		    <plugin>
      			<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
      			<executions>
        			<execution>
          				<id>sign-artifacts</id>
          				<phase>deploy</phase>
          				<goals>
            				<goal>sign</goal>
          				</goals>
          				<configuration>
                            <!-- This is necessary for gpg to not try to use the pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                        </configuration>
        			</execution>
      			</executions>
    		</plugin>
			<plugin>
		      	<groupId>org.sonatype.plugins</groupId>
		      	<artifactId>nexus-staging-maven-plugin</artifactId>
		      	<version>1.6.7</version>
		      	<extensions>true</extensions>
		      	<configuration>
		        	<serverId>ossrh</serverId>
		        	<nexusUrl>https://oss.sonatype.org/</nexusUrl>
		        	<!-- <autoReleaseAfterClose>true</autoReleaseAfterClose> -->
		      	</configuration>
		    </plugin>
		</plugins>
	</build>
</project>

