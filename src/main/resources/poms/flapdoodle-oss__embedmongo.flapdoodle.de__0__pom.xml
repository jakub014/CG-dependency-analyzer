<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>de.flapdoodle.embed</groupId>
	<artifactId>de.flapdoodle.embed.mongo</artifactId>
	<name>Flapdoodle Embedded MongoDB</name>
	<version>3.0.1-SNAPSHOT</version>
    <packaging>bundle</packaging>

	<description>A embedded mongodb ...</description>
	<url>http://github.com/flapdoodle-oss/embedmongo.flapdoodle.de</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>


	<scm>
		<connection>scm:git:git@github.com:flapdoodle-oss/embedmongo.flapdoodle.de.git</connection>
		<developerConnection>scm:git:git@github.com:flapdoodle-oss/embedmongo.flapdoodle.de.git</developerConnection>
		<url>git@github.com:flapdoodle-oss/embedmongo.flapdoodle.de.git</url>
	</scm>

	<!-- https://docs.sonatype.org/display/Repository/Central+Sync+Requirements
		https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide
		https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven -->
	<build>
		<plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>[1.8,)</version>
                        </jdk>
                    </toolchains>
                </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>enforce-ban-duplicate-classes</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicateClasses>
									<ignoreClasses>
										<!-- example of ignoring one specific class -->
										<!--
										<ignoreClass>com.xyz.i18n.Messages</ignoreClass>
										-->
										<!-- example of ignoring with wildcards -->
										<!--
										<ignoreClass>org.apache.commons.logging.*</ignoreClass>
										-->
									</ignoreClasses>
									<findAllDuplicates>true</findAllDuplicates>
								</banDuplicateClasses>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>extra-enforcer-rules</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<excludes>
						<exclude>**/live/**</exclude>
						<exclude>**/examples/**</exclude>
					</excludes>
					<systemPropertyVariables>
						<de.flapdoodle.testdoc.destination>${project.build.directory}</de.flapdoodle.testdoc.destination>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<!-- <basedir>${basedir}</basedir> -->
					<header>${basedir}/src/etc/header.txt</header>
					<validHeaders>
						<validHeader>${basedir}/src/etc/header-manual-can-yaman.txt</validHeader>
					</validHeaders>
					<quiet>false</quiet>
					<failIfMissing>true</failIfMissing>
					<strictCheck>true</strictCheck>
					<aggregate>false</aggregate>
					<includes>
						<include>src/**</include>
						<include>**/test/**</include>
					</includes>
					<excludes>
						<exclude>src/etc/**</exclude>
						<exclude>target/**</exclude>
						<exclude>.clover/**</exclude>
					</excludes>
					<useDefaultExcludes>true</useDefaultExcludes>
					<!-- <mapping> <jwc>XML_STYLE</jwc> <application>XML_STYLE</application>
						<myFileExtension>JAVADOC_STYLE</myFileExtension> </mapping> <useDefaultMapping>true</useDefaultMapping> -->
					<properties>
						<lic.year>2011</lic.year>
						<lic.email>michael@mosmann.de</lic.email>
						<lic.username>Michael Mosmann</lic.username>
						<lic.email2>m.joehren@googlemail.com</lic.email2>
						<lic.username2>Martin JÃ¶hren</lic.username2>
						<lic.developers>konstantin-ba@github,Archimedes Trajano	(trajano@github)</lic.developers>
					</properties>
					<encoding>UTF-8</encoding>
					<!-- <headerDefinitions> <headerDefinition>def1.xml</headerDefinition>
						<headerDefinition>def2.xml</headerDefinition> </headerDefinitions> -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<configLocation>config/checkstyle.xml</configLocation>
					<excludes>
						${basedir}/src/test/**/*
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<!-- <execution> <id>check</id> <goals> <goal>check</goal> </goals>
						<configuration> <check> <classRatio>100</classRatio> <instructionRatio>90</instructionRatio>
						<methodRatio>95</methodRatio> <branchRatio>85</branchRatio> <complexityRatio>85</complexityRatio>
						<lineRatio>90</lineRatio> </check> </configuration> </execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<classpathScope>test</classpathScope>
							<mainClass>de.flapdoodle.embed.mongo.buildsupport.ExtractMarkdownFromCode</mainClass>
							<arguments>
								<argument>${basedir}/src/test/java/de/flapdoodle/embed/mongo/examples/TestExampleReadMeCode.java</argument>
								<argument>${project.build.directory}/usage-reademe.md</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

           	<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>5.1.1</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-Category>Utilities</Bundle-Category>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Description>${project.description}</Bundle-Description>
						<Export-Package>${osgi.export}</Export-Package>
						<Import-Package>${osgi.import}</Import-Package>
					</instructions>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-toolchains-plugin
										</artifactId>
										<versionRange>
											[1.1,)
										</versionRange>
										<goals>
											<goal>toolchain</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>travis</id>
			<build>
				<plugins>
				    <plugin>
				        <groupId>org.apache.maven.plugins</groupId>
				        <artifactId>maven-toolchains-plugin</artifactId>
				        <version>1.1</version>
				        <executions>
				            <execution>
				            	<phase>none</phase>
				                <goals>
				                    <goal>toolchain</goal>
				                </goals>
				            </execution>
				        </executions>
				    </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<osgi.category>Bundles</osgi.category>
		<osgi.export>
			de.flapdoodle.embed.mongo;version=${project.version},
			de.flapdoodle.embed.mongo.config;version=${project.version},
			de.flapdoodle.embed.mongo.config.processlistener;version=${project.version},
			de.flapdoodle.embed.mongo.distribution;version=${project.version},
			de.flapdoodle.embed.mongo.runtime;version=${project.version},
			de.flapdoodle.embed.mongo.tests;version=${project.version}
		</osgi.export>
		<osgi.import>
			com.mongodb,
			de.flapdoodle.embed.process,
			de.flapdoodle.embed.process.builder,
			de.flapdoodle.embed.process.collections,
			de.flapdoodle.embed.process.config,
			de.flapdoodle.embed.process.config.io,
			de.flapdoodle.embed.process.config.process,
			de.flapdoodle.embed.process.config.store,
			de.flapdoodle.embed.process.distribution,
			de.flapdoodle.embed.process.exceptions,
			de.flapdoodle.embed.process.extract,
			de.flapdoodle.embed.process.io,
			de.flapdoodle.embed.process.io.directories,
			de.flapdoodle.embed.process.io.file,
			de.flapdoodle.embed.process.io.progress,
			de.flapdoodle.embed.process.runtime,
			de.flapdoodle.embed.process.store,
			org.apache.commons.io,
			org.slf4j
		</osgi.import>
        <!-- eclipse apt switch -->
        <m2e.apt.activation>jdt_apt</m2e.apt.activation>
	</properties>

	<dependencies>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-api</artifactId>
                    <version>5.7.0</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter-engine</artifactId>
                    <version>5.7.0</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                    <version>5.7.0</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter-params</artifactId>
					<version>5.7.0</version>
					<scope>test</scope>
				</dependency>
                <dependency>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                    <version>3.17.2</version>
                    <scope>test</scope>
                </dependency>
                <!-- needed by infinitest? -->
                <!--
                <dependency>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                    <version>2.2</version>
                    <scope>test</scope>
                </dependency>
                                -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.5.13</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.26</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.testdoc</groupId>
			<artifactId>de.flapdoodle.testdoc</artifactId>
			<version>1.2.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.process</artifactId>
			<version>3.0.1</version>
		</dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
            <version>2.8.8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>builder</artifactId>
            <version>2.8.8</version>
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>3.12.7</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>30.0-jre</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.30</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
