description 'web3j-openapi project code generators'

apply plugin: 'org.unbroken-dome.test-sets'

testSets {
    integrationTest {
        dirName = 'integration-test'
    }
}

dependencies {
    implementation("com.pinterest.ktlint:ktlint-core:${versions.ktlint}") {
        exclude group: 'org.apache.commons'
        exclude group: 'org.apache.httpcomponents'
        exclude group: 'org.slf4j'
    }

    implementation "com.pinterest.ktlint:ktlint-ruleset-standard:${versions.ktlint}"
    implementation "com.pinterest.ktlint:ktlint-ruleset-experimental:${versions.ktlint}"
    implementation("org.openapitools:openapi-generator:${versions.openApiGenerator}") {
        exclude group: 'com.github.jknack'
        exclude group: 'javax.activation'
        exclude group: 'javax.validation'
        exclude group: 'javax.xml.bind'
        exclude group: 'org.slf4j'
    }

    implementation("org.web3j:codegen:$web3jVersion") {
        exclude group: 'info.picocli'
    }
    implementation "com.squareup:kotlinpoet:${versions.kotlinPoet}"
}

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
    main {
        // Register an output folder on the main source set:
        output.dir(generatedResources, builtBy: 'generateVersionProperties')
    }
    integrationTest.java.srcDirs += [
        "$outputDirectory/$generatedProjectName/server/src/main/java"
    ]
    integrationTest.kotlin.srcDirs += [
        "$outputDirectory/$generatedProjectName/core/src/main/kotlin",
        "$outputDirectory/$generatedProjectName/server/src/main/kotlin",
        "$outputDirectory/$generatedProjectName/server/src/main/java"
    ]
}

task generateVersionProperties {
    description 'Creates a version.properties file with build info that is added to the root of the JAR'
    doLast {
        new File(generatedResources).mkdirs()
        def generated = new File(generatedResources, "openapi-version.properties")
        generated.write("version=$rootProject.version\n")
        generated.append("timestamp=${System.currentTimeMillis()}\n")
    }
}

task copyIntegrationTestResources(type: Copy) {
    from "$buildDir/resources/main/server/src/main/resources"
    into 'build/resources/integrationTest/server/src/main/resources'
    dependsOn processTestResources
}

integrationTest.dependsOn copyIntegrationTestResources, publishToMavenLocal
