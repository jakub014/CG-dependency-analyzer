apply plugin: 'java'
apply plugin: "com.google.protobuf"
apply plugin: "maven-publish"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-gradle-plugin
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: protobufGradlePlugin
    }
}


repositories {
    mavenCentral()
}

dependencies {
    compile	"commons-cli:commons-cli:1.3.1"
    compile	"org.apache.commons:commons-csv:1.5"
    compile "org.slf4j:slf4j-api:1.7.14"
    compile "org.slf4j:slf4j-simple:1.7.14"
    compile 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    compile 'org.reflections:reflections:0.9.12'
    compile 'io.micrometer:micrometer-registry-jmx:latest.release'
    compile 'io.micrometer:micrometer-registry-prometheus:latest.release'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-properties', version: '2.12.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/kmgowda/SBK")
            credentials {
                username = project.findProperty("github.username") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("github.token") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = "io.github.kmgowda"

            if (!project.property("signing.keyId")) {
                project.setProperty("signing.keyId", System.getenv("SIGNING_KEYID"))
            }

            if (!project.property("signing.password")) {
                project.setProperty("signing.password", System.getenv("SIGNING_PASSWORD"))
            }

            if (!project.property("signing.secretKeyRingFile")) {
                def secretKeyPath = project.file("${System.getProperty("user.home")}/.gnupg/secring.gpg").absolutePath
                project.setProperty("signing.secretKeyRingFile", secretKeyPath)
            }

            if (project.property("signing.keyId") && project.property("signing.password") && project.property("signing.secretKeyRingFile")) {
                signing {
                    sign configurations.archives
                }
            }

            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                def username = project.findProperty("oss.username") ?: System.getenv("OSS_USERNAME")
                def password = project.findProperty("oss.password") ?: System.getenv("OSS_PASSWORD")
                authentication(userName: username, password: password)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                def username = project.findProperty("oss.username") ?: System.getenv("OSS_USERNAME")
                def password = project.findProperty("oss.password") ?: System.getenv("OSS_PASSWORD")
                authentication(userName: username, password: password)
            }

            pom.project {
                name "SBK"
                url "https://github.com/kmgowda/sbk"
                description "Storage Benchmark Kit"
                scm {
                    url 'https://github.com/kmgowda/sbk/tree/master'
                    connection 'scm:git:git://github.com/kmgowda/sbk.git'
                    developerConnection 'scm:git:https://github.com/kmgowda/sbk.git'
                }
                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kmgowda'
                        name = 'Keshava Munegowda'
                        email = 'keshava.gowda@gmail.com'
                    }
                }
            }
        }
    }
}

