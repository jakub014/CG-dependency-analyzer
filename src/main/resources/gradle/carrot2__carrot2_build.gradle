plugins {
  id 'base'

  id "com.github.node-gradle.node" version "2.2.4" apply false
  id "com.palantir.consistent-versions" version '1.27.0'

  id 'com.diffplug.spotless' version "5.8.2" apply false
  id "com.github.ben-manes.versions" version "0.36.0"

  id 'de.thetaphi.forbiddenapis' version '3.1' apply false

  id 'com.carrotsearch.gradle.randomizedtesting' version '0.0.2' apply false
}

repositories {
  mavenLocal()
  mavenCentral()
}

rootProject.version = '4.3.0-SNAPSHOT'
ext {
  fullName = "Carrot2"

  versions = [
    node: '14.15.3',
    yarn: '1.22.5',
  ]

  licenseHeader = file("etc/spotless/license-header.txt")
  legal = files('carrot2.LICENSE')

  forbiddenApiRulesDir = file("etc/forbidden-apis")

  langResourcePatterns = [
    '**/*.label-filters.json',
    '**/*.word-filters.json',
  ]
}

apply from: file('gradle/validation/check-environment.gradle')

apply from: file('gradle/defaults.gradle')
apply from: file('gradle/cleanall.gradle')
apply from: file('gradle/gitinfo.gradle')
apply from: file('gradle/buildinfo.gradle')
apply from: file('gradle/defaults-java.gradle')

apply from: file('gradle/node/yarn-projects.gradle')

apply from: file('gradle/ide/idea.gradle')

apply from: file("gradle/testing/defaults-tests.gradle")
apply from: file("gradle/testing/per-project-summary.gradle")
apply from: file("gradle/testing/slowest-tests-at-end.gradle")

apply from: file("gradle/validation/forbidden-apis.gradle")
apply from: file("gradle/validation/spotless.gradle")

apply from: file('gradle/maven/defaults-maven.gradle')

subprojects {
  if (project.file("src/main/java").exists() ||
  project.file("src/test/java").exists() ||
  project.file("src/main/webapp").exists()) {
    apply plugin: 'java-library'
    apply plugin: 'com.carrotsearch.gradle.randomizedtesting'

    if (![
      ":core-examples"
    ].contains(project.path)) {
      dependencies {
        testImplementation project(':infra:tests')
      }
    }
  }
}

allprojects { prj ->
  plugins.withType(WarPlugin) {
    configurations {
      war {}
    }

    artifacts {
      war tasks.war
    }

    dependencies {
      // A bug (?) in palantir prevents versionless dependency here.
      providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    }
  }
}
