apply from: 'version.gradle'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
}


dependencies {
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.4'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives javadocJar, sourcesJar
}


signing {
    sign configurations.archives
}

if (project.hasProperty('ossrhUsername')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'MeaningCloud Java SDK'
                    packaging 'jar'
                    description 'MeaningCloud official Java SDK'
                    url 'https://www.meaningcloud.com'

                    scm {
                        connection 'scm:git:https://github.com/MeaningCloud/meaningcloud-java'
                        developerConnection 'scm:git:https://github.com/MeaningCloud/meaningcloud-java'
                        url 'https://github.com/MeaningCloud/meaningcloud-java'
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'https://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id 'dmunoz'
                            name 'David Muñoz'
                            email 'dmunoz@meaningcloud.com'
                        }
                    }
                }
            }
        }
    }
}


test {
    doFirst {
        def key = System.properties['MEANINGCLOUD_KEY']
        if (!key) {
          throw new Exception("No MEANINGCLOUD_KEY given. Please specify it with -DMEANINGCLOUD_KEY=...")
        }
        systemProperty "MEANINGCLOUD_KEY", key
    }
    reports.html.destination = file("./html")
    reports.junitXml.destination = file("./xml")
}
apply from: 'version.gradle'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
}


dependencies {
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.apache.httpcomponents:httpclient:4.5.4'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


artifacts {
    archives javadocJar, sourcesJar
}


signing {
    sign configurations.archives
}

if (project.hasProperty('ossrhUsername')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'MeaningCloud Java SDK'
                    packaging 'jar'
                    description 'MeaningCloud official Java SDK'
                    url 'https://www.meaningcloud.com'

                    scm {
                        connection 'scm:git:https://github.com/MeaningCloud/meaningcloud-java'
                        developerConnection 'scm:git:https://github.com/MeaningCloud/meaningcloud-java'
                        url 'https://github.com/MeaningCloud/meaningcloud-java'
                    }

                    licenses {
                        license {
                            name 'The MIT License'
                            url 'https://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id 'dmunoz'
                            name 'David Muñoz'
                            email 'dmunoz@meaningcloud.com'
                        }
                    }
                }
            }
        }
    }
}


test {
    doFirst {
        def key = System.properties['MEANINGCLOUD_KEY']
        if (!key) {
          throw new Exception("No MEANINGCLOUD_KEY given. Please specify it with -DMEANINGCLOUD_KEY=...")
        }
        systemProperty "MEANINGCLOUD_KEY", key
    }
    reports.html.destination = file("./html")
    reports.junitXml.destination = file("./xml")
}
