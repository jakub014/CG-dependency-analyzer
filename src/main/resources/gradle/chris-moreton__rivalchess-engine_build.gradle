buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'maven'
    id 'maven-publish'
    id 'signing'
}

group = "com.netsensia.rivalchess"
version = '43.0.1'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

apply plugin: 'kotlin'

compileKotlin.kotlinOptions.jvmTarget = "1.8"

jar.baseName("rivalchess-engine")

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.30'
    compile group: 'com.netsensia.rivalchess', name: 'rivalchess-openings', version: '1.0.5'
    compile group: 'com.netsensia.rivalchess', name: 'rivalchess-model', version: '7.0.4'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.5'
    compile group: 'com.ea.async', name: 'ea-async', version: '1.2.3'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.awaitility:awaitility:4.0.2'

}

test {
    useJUnit()
    maxHeapSize = '1G'
    testLogging.showStandardStreams = true
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar.baseName("rivalchess-engine")

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'rivalchess-engine'
                packaging 'jar'
                description 'The engine used by Rival Chess'
                url 'https://github.com/chris-moreton/rivalchess-engine'

                scm {
                    connection = 'scm:git:git://github.com/chris-moreton/rivalchess-engine.git'
                    developerConnection = 'scm:git:ssh://github.com/chris-moreton/rivalchess-engine.git'
                    url = 'https://github.com/chris-moreton/rivalchess-engine'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'chris-moreton'
                        name = 'Chris Moreton'
                        email = 'chris@netsensia.com'
                    }
                }
            }
        }
    }
}
