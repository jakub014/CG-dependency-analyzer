buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id 'net.researchgate.release' version '2.8.1'
}

release {
  failOnCommitNeeded = false
  failOnPublishNeeded = true
  failOnSnapshotDependencies = true
  failOnUnversionedFiles = true
  failOnUpdateNeeded = true
  revertOnFail = true

  git {
    requireBranch = 'master'
    pushToRemote = 'origin'
  }
}

allprojects {
  group 'io.tekniq'

  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'maven'
  apply plugin: 'signing'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  compileKotlin {
    kotlinOptions.suppressWarnings = true
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
      jvmTarget = "1.8"
      apiVersion = "1.4"
      languageVersion = "1.4"
      javaParameters = true
    }
  }

  compileTestKotlin {
    kotlinOptions.suppressWarnings = true
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
      jvmTarget = "1.8"
      apiVersion = "1.4"
      languageVersion = "1.4"
      javaParameters = true
    }
  }

  repositories {
    mavenCentral()
  }

  dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testRuntime 'com.hynnet:logback-classic:1.1.3'
  }

  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
  }

  signing {
    sign configurations.archives
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
        pom.project {
          name project.name
          packaging 'jar'
          description 'A framework designed around Kotlin'
          url 'https://github.com/sepatel/tekniq'

          scm {
            connection 'scm:git:git://github.com/sepatel/tekniq.git'
            developerConnection 'scm:git:git://github.com/sepatel/tekniq'
            url 'http://github.com/sepatel/tekniq'
          }

          licenses {
            license {
              name 'MIT License'
              url 'https://raw.githubusercontent.com/sepatel/tekniq/master/LICENSE'
            }
          }

          developers {
            developer {
              id 'sepatel'
              name 'Sejal Patel'
              email 'sejal@tekniq.io'
            }
          }
        }
      }
    }
  }
}
