/*
 * Copyright 2017 The Hyve and King's College London
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'com.commercehub.gradle.plugin.avro' version '0.19.1'
    id("io.github.gradle-nexus.publish-plugin") version "1.0.0"
    id("com.github.ben-manes.versions") version "0.38.0"
}

allprojects {
    version = '0.13.2'
    group = 'org.radarbase'
}

subprojects {
    // Apply the plugins
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'com.github.ben-manes.versions'

    //---------------------------------------------------------------------------//
    // Configuration                                                             //
    //---------------------------------------------------------------------------//
    ext.githubRepoName = 'RADAR-base/radar-commons'

    ext.slf4jVersion = '1.7.30'
    ext.kafkaVersion = '6.1.1-ce'
    ext.avroVersion = '1.9.2'
    ext.confluentVersion = '6.1.1'
    ext.jacksonVersion = '2.12.3'
    ext.jacksonYamlVersion = '2.12.3'
    ext.okhttpVersion = '4.9.1'
    ext.junitVersion = '4.13.2'
    ext.mockitoVersion = '3.9.0'
    ext.hamcrestVersion = '1.3'
    ext.codacyVersion = '11.15.0'
    ext.radarSchemasVersion = '0.6.0'
    ext.orgJsonVersion = '20210307'

    ext.githubUrl = "https://github.com/$githubRepoName"
    ext.issueUrl = "https://github.com/$githubRepoName/issues"
    ext.website = 'https://radar-base.org'

    //---------------------------------------------------------------------------//
    // Dependencies                                                              //
    //---------------------------------------------------------------------------//
    repositories {
        mavenCentral()
        maven { url 'https://packages.confluent.io/maven/' }
        flatDir {
            dirs "${project.rootDir}/libs"
        }
    }

    idea {
        module {
            downloadSources = true
        }
    }

    //---------------------------------------------------------------------------//
    // Style checking                                                            //
    //---------------------------------------------------------------------------//

    tasks.matching { it instanceof Test }.all {
        def stdout = new LinkedList<String>()
        beforeTest { TestDescriptor td ->
            stdout.clear()
        }

        onOutput { TestDescriptor td, TestOutputEvent toe ->
            stdout.addAll(toe.getMessage().split('(?m)$'))
            while (stdout.size() > 100) {
                stdout.remove()
            }
        }

        afterTest { TestDescriptor td, TestResult tr ->
            if (tr.resultType == TestResult.ResultType.FAILURE) {
                println()
                print("${td.className}.${td.name} FAILED")
                if (stdout.empty) {
                    println(" without any output")
                } else {
                    println(" with last 100 lines of output:")
                    println('=' * 100)
                    stdout.each { print(it) }
                    println('=' * 100)
                }
            }
        }

        testLogging {
            showExceptions = true
            showCauses = true
            showStackTraces = true
            exceptionFormat "full"
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.hasProperty("ossrh.user") ? project.property("ossrh.user") : System.getenv("OSSRH_USER")
            password = project.hasProperty("ossrh.password") ? project.property("ossrh.password") : System.getenv("OSSRH_PASSWORD")
        }
    }
}

wrapper {
    gradleVersion '7.0'
}
/*
 * Copyright 2017 The Hyve and King's College London
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'com.commercehub.gradle.plugin.avro' version '0.19.1'
    id("io.github.gradle-nexus.publish-plugin") version "1.0.0"
    id("com.github.ben-manes.versions") version "0.38.0"
}

allprojects {
    version = '0.13.2'
    group = 'org.radarbase'
}

subprojects {
    // Apply the plugins
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'com.github.ben-manes.versions'

    //---------------------------------------------------------------------------//
    // Configuration                                                             //
    //---------------------------------------------------------------------------//
    ext.githubRepoName = 'RADAR-base/radar-commons'

    ext.slf4jVersion = '1.7.30'
    ext.kafkaVersion = '6.1.1-ce'
    ext.avroVersion = '1.9.2'
    ext.confluentVersion = '6.1.1'
    ext.jacksonVersion = '2.12.3'
    ext.jacksonYamlVersion = '2.12.3'
    ext.okhttpVersion = '4.9.1'
    ext.junitVersion = '4.13.2'
    ext.mockitoVersion = '3.9.0'
    ext.hamcrestVersion = '1.3'
    ext.codacyVersion = '11.15.0'
    ext.radarSchemasVersion = '0.6.0'
    ext.orgJsonVersion = '20210307'

    ext.githubUrl = "https://github.com/$githubRepoName"
    ext.issueUrl = "https://github.com/$githubRepoName/issues"
    ext.website = 'https://radar-base.org'

    //---------------------------------------------------------------------------//
    // Dependencies                                                              //
    //---------------------------------------------------------------------------//
    repositories {
        mavenCentral()
        maven { url 'https://packages.confluent.io/maven/' }
        flatDir {
            dirs "${project.rootDir}/libs"
        }
    }

    idea {
        module {
            downloadSources = true
        }
    }

    //---------------------------------------------------------------------------//
    // Style checking                                                            //
    //---------------------------------------------------------------------------//

    tasks.matching { it instanceof Test }.all {
        def stdout = new LinkedList<String>()
        beforeTest { TestDescriptor td ->
            stdout.clear()
        }

        onOutput { TestDescriptor td, TestOutputEvent toe ->
            stdout.addAll(toe.getMessage().split('(?m)$'))
            while (stdout.size() > 100) {
                stdout.remove()
            }
        }

        afterTest { TestDescriptor td, TestResult tr ->
            if (tr.resultType == TestResult.ResultType.FAILURE) {
                println()
                print("${td.className}.${td.name} FAILED")
                if (stdout.empty) {
                    println(" without any output")
                } else {
                    println(" with last 100 lines of output:")
                    println('=' * 100)
                    stdout.each { print(it) }
                    println('=' * 100)
                }
            }
        }

        testLogging {
            showExceptions = true
            showCauses = true
            showStackTraces = true
            exceptionFormat "full"
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.hasProperty("ossrh.user") ? project.property("ossrh.user") : System.getenv("OSSRH_USER")
            password = project.hasProperty("ossrh.password") ? project.property("ossrh.password") : System.getenv("OSSRH_PASSWORD")
        }
    }
}

wrapper {
    gradleVersion '7.0'
}
