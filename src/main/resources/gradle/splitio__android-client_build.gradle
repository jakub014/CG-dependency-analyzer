apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'maven'
apply plugin: "maven-publish"

ext {
    splitVersion = '2.7.0'
}

allprojects {
    group = 'io.split.client'
    version = splitVersion
}

android {
    compileSdkVersion 28
    targetCompatibility = '1.8'
    sourceCompatibility = '1.8'

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 0
        versionName splitVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'split-proguard-rules.pro'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    configurations {
        javadocDeps
        all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }
}

dependencies {

    def roomVersion = '2.2.2'

    // Room components
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    implementation 'androidx.work:work-runtime:2.3.1'

    implementation 'androidx.lifecycle:lifecycle-process:2.2.0'

    implementation 'androidx.annotation:annotation:1.1.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.guava:guava:18.0'

    implementation 'org.yaml:snakeyaml:1.28'
    implementation 'org.jetbrains:annotations:15.0'
    implementation "com.squareup.okhttp3:okhttp:3.12.0"
    implementation "com.google.android.gms:play-services-base:17.3.0"

    // Test
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation 'androidx.work:work-testing:2.3.1'

    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.apache.commons:commons-lang3:3.6'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.12.0'

}

repositories {
    maven { url "https://maven.google.com" }
    mavenCentral()
    jcenter()
}

buildscript {
    repositories {
        maven { url "https://maven.google.com" }
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
    }
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Split Android SDK'
                packaging 'jar'
                description 'Official Split Android SDK'
                url 'https://github.com/splitio/android-client'

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'sarrubia'
                        name 'Sebastian Arrubia'
                        email 'sebastian@split.io'
                    }

                    developer {
                        id 'fernando'
                        name 'Fernando Martin'
                        email 'fernando@split.io'
                    }
                }

                scm {
                    connection 'scm:git:git@github.com:splitio/android-client.git'
                    developerConnection 'scm:git@github.com:splitio/android-client.git'
                    url 'https://github.com/splitio/android-client'
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
