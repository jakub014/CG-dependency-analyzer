/*
 * Copyright 2017 TomTom International B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

allprojects {
    if(project.hasProperty('releaseVersion')) {
        version = project.releaseVersion
    } else {
        version = '1.0-SNAPSHOT'
    }
    group = 'com.github.tomtom-international.james'
}

subprojects {
    repositories {
        jcenter()
    }

    apply plugin: 'com.github.johnrengelman.shadow'

    ext.versions = [
            groovy      : '2.5.14',
            guava       : '28.2-jre',
            jackson     : '2.10.3',
            snakeyaml   : '1.27',
            spock       : '1.3-groovy-2.5',
            objenesis   : '2.6',
            awaitility  : '4.0.2',
            commonslang : '3.9',
            javassist   : '3.24.0-GA',
            bytebuddytests: '1.9.3',
            disruptor: '3.4.2',
            log4j_stackutil: '2.13.1', // 2.13.2 should be used as soon as it is released - LOG4J2-2809
            ecs_logging: '1.0.0'
    ]
}

wrapper {
    gradleVersion = '4.2'
}

def projectDescriptions = [
  'james-agent-common': 'A package that lets you write your own toolkits for James',
  'james-controller-webservice-api': 'API for REST controller of James',
  'james-controller-webservice-client': 'Client for REST controller of James'
]

def projectList = subprojects.findAll { projectDescriptions.keySet().contains(it.name) }

configure(projectList) { confPrj ->
  apply plugin: 'java'
  apply plugin: 'maven'

  if(project.hasProperty('releaseVersion')) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
      classifier = 'javadoc'
      from javadoc
    }

    task sourcesJar(type: Jar) {
      classifier = 'sources'
      from sourceSets.main.allSource
    }

    artifacts {
      archives javadocJar, sourcesJar
    }

    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: ossrhUsername, password: ossrhPassword)
          }

          pom.project {
            name confPrj.name
            packaging 'jar'
            description projectDescriptions[confPrj.name]
            url 'https://github.com/tomtom-international/james'

            scm {
              connection 'scm:git:https://github.com/tomtom-international/james.git'
              developerConnection 'scm:git:https://github.com/tomtom-international/james.git'
              url 'https://github.com/tomtom-international/james'
            }

            licenses {
              license {
                name 'The Apache License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0'
              }
            }

            developers {
              developer {
                id 'pdebicki'
                name 'Piotr DÄ™bicki'
                email 'piotr.debicki@tomtom.com'
              }
              developer {
                id 'alibich'
                name 'Artur Libich'
                email 'artur.libich@tomtom.com'
              }
            }
          }
        }
      }
    }
  }
}
